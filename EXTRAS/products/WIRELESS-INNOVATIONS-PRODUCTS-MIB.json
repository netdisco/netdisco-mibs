{
  "imports": {
    "class": "imports", 
    "ANDREW-MIB": [
      "wirelessInnovations"
    ], 
    "ENTITY-MIB": [
      "PhysicalIndex"
    ], 
    "SNMPv2-CONF": [
      "NOTIFICATION-GROUP", 
      "MODULE-COMPLIANCE", 
      "OBJECT-GROUP"
    ], 
    "SNMPv2-MIB": [
      "sysName"
    ], 
    "SNMPv2-SMI": [
      "Integer32", 
      "OBJECT-TYPE", 
      "NOTIFICATION-TYPE", 
      "MibIdentifier", 
      "IpAddress", 
      "TimeTicks", 
      "Counter64", 
      "Unsigned32", 
      "MODULE-IDENTITY", 
      "Gauge32", 
      "iso", 
      "OBJECT-IDENTITY", 
      "Bits", 
      "Counter32"
    ], 
    "SNMPv2-TC": [
      "TruthValue", 
      "DisplayString", 
      "VariablePointer", 
      "TEXTUAL-CONVENTION", 
      "DateAndTime"
    ]
  }, 
  "wirelessInnovationsProducts": {
    "name": "wirelessInnovationsProducts", 
    "oid": "1.3.6.1.4.1.331.1.2.1", 
    "class": "moduleidentity", 
    "revisions": [
      {
        "revision": "2012-12-18 17:25", 
        "description": "1.6.0.0 Changed: - TC CTA: Description extended (Example 5+6). - basicAgentConditionChangedConfig: Extended with locationLatency - connVpnServerPhysicalIP: Description extended, made Read Only. Now several VPN servers supported, see 'connVpnServerGroups' - connVpnManagerVirtualIP: Description extended Added: - object identity 'basicGpsData' - changedLocationAreaEvent - connAgentInformTimeout - connAgentInformRetries - connOpenVpnProtocol - connVpnClientVirtualIP - connVpnNotificationDestinationIsAlarmRecipient - connVpnConnectionMode - object identity 'connVpnServerGroups' - connVpnDisconnectTrigger - connAgentZoneChangeNotificationsEnabled - object identity 'ionU'"
      }, 
      {
        "revision": "2011-02-17 13:15", 
        "description": "1.5.3.0 Changed: - commonDeviceSwUpdateActivationRemoval: Description extended. - swNeededFilesTable: Description extended. Added: - swNeededFilesTable.swNeededFilesImmediateActivationRequired - swNeededFilesTable.swNeededFilesImmediateActivationSync - swFinalActivationNotification"
      }, 
      {
        "revision": "2010-12-14 17:15", 
        "description": "1.5.2.0 Added: - connAgentWebCommunicationProtocol"
      }, 
      {
        "revision": "2010-11-03 08:25", 
        "description": "1.5.1.0 Changed: - basicAgentOutOfOperationArea: Description extended. - connAgentUID2: Description extended. - changedParameterEvent: new object (basicCurrentTime), description extended"
      }, 
      {
        "revision": "2010-06-01 13:00", 
        "description": "1.5.0.0 Changed: - TC Version: range extended (empty string is allowed). - alarmTrapCounter: description extended. - alarmTrap: new object (basicAgentLocationIdentification) added - changedParameterEvent: new objects (basicAgentLocationIdentification,basicAgentLocationAlias,basicAgentOutOfOperationArea,basicAgentConditionChangedConfig,connAgentUID2) - changedIPAddressEvent: new object (connAgentUID2) - agentUpAndRunningEvent: new objects (basicAgentOutOfOperationArea,connAgentUID2,swActivePackageVersion,swActivePackagePatchLevel) added - object identity 'commonDeviceFileTransfer.fUpload': several descriptions extended. Added: - basicAgentLocationIdentification - basicAgentLocationAlias - basicAgentOutOfOperationArea - basicAgentConditionChangedConfig - alarmConfig2Latency - connAgentUID2 - agentShutdownEvent - fulDestFolder - object identity 'commonDeviceSwUpdateActivationRemoval' "
      }, 
      {
        "revision": "2009-12-14 16:30", 
        "description": "1.4.0.0 Changed: - TC CTA: Description extended (Example 4). - alarmConfigTable -> obsolete. This table is no longer supported. New table is alarmConfig2Table. - alarmUsertextTable -> obsolete. This table is no longer supported. New table is alarmUsertext2Table. - featureKeyNew: string size corrected (empty string is allowed). Added: - object identity 'commonDeviceFileTransfer.fUpload'"
      }, 
      {
        "revision": "2008-02-21 16:00", 
        "description": "1.3.1.0 Changed: - TC SpecificProblem: range extended - connAndrewVpnAuthUsername: range corrected - connAndrewVpnAuthPassword: range corrected - connAgentDisconnectTrigger: description corrected - featureKeyNew: description corrected - TC CTA, alarmUsertext4CTA, alarmThreshold4CTA, alarmEquipmentCTA: description extended to describe the extended CTA handling"
      }, 
      {
        "revision": "2007-09-28 14:40", 
        "description": "1.3.0.0 Changed: - heartbeatEvent: new object added - changedIPAddressEvent: added 3 new objects - connAgntOrigIfExtraSetting: range extended Added: - TC PositiveIntegerButNotZero - TC PositiveIntegerIncludingZero - object idendity 'alarmThresholds' - alarmSummary - connAgentDisconnectTrigger - object idendity 'connAgentVpn' - connAgntOrigAlwaysOnInactivityTimer - object idendity 'commonDeviceFeatureKeys' - child node groupION - optionalObjectsGroup"
      }, 
      {
        "revision": "2007-03-30 11:00", 
        "description": "1.2.2.0 Added child node groupMiniRepeater"
      }, 
      {
        "revision": "2006-11-07 17:14", 
        "description": "1.2.1.0 Added child node groupAMR"
      }, 
      {
        "revision": "2005-12-09 15:14", 
        "description": "1.2.0.0 Descriptions corrected/extended: - alarmTrapCounter: extended, because of new agentUpAndRunningEvent Added: - TC NotificationType - TC Severity4Set - alarmSeveritiesSupported4Set - alarmConfigTable - alarmUsertextTable - connAgentNotificationType - agentRebootRequiredEvent - agentUpAndRunningEvent"
      }, 
      {
        "revision": "2005-11-17 17:00", 
        "description": "1.1.1.0 Changed: - basicAgentIPAddress -> obsolete. This object is no longer supported. - connAgentMainConnectivityType -> obsolete. This object is no longer supported. New objects are 'connAgentMainConnectivity' and corresponding 'connAgntOrigIfConnectionType'. - connAgntOrigIfConnectivityType -> obsolete. This object is no longer supported. New objects are 'connAgntOrigIfNetworkType' and 'connAgntOrigIfConnectionType'. Descriptions corrected/extended: - commonDeviceConnectivity.*Password*: return value corrected/harmonized with actual implementation - connAgntOrigIfExtraSetting: extended - connAttachPSODrequesterSMS: extended Added: - TC NetworkType - TC ConnectionType - connAgentMainConnectivity - connAgntOrigIfNetworkType - connAgntOrigIfConnectionType - connAttachPSODbySMSenabled - connAgentSMSserviceCenter - connAgentSmsWlTable"
      }, 
      {
        "revision": "2005-05-12 16:45", 
        "description": "1.1.0.0 Removed still unused placeholders: - groupTMA - groupTMB - groupSR - groupNodeB - groupLOMC - groupMMR Changed: - basicAgentIPAddress -> deprecated. New object is 'connManOrigAgentIPAddressCS' - Syntax alarmHeartbeatInterval: Unsigned32 -> Gauge32 (same base syntax) Descriptions corrected/extended: - alarmPerceivedSeverity: harmonized with corresponding TC - alarmID: is not alarm table index - changedIPAddressEvent: extended Added: - TC ConnectivityType - object identity 'commonDeviceConnectivity' + connAgentUID, appended to every private/enterprise trap + connAgentMainConnectivityType + connAgentIPAddressLAN + object identity 'connManagerOriginated' * connManOrigAgentIPAddressCS * connManOrigAuthUsernameCS * connManOrigAuthPasswordCS * connManOrigIdleTimeoutCS + object identity 'connAgentOriginated' * connAgntOrigIfTable ~ connAgntOrigIfIndex ~ connAgntOrigIfConnectivityType ~ connAgntOrigIfEnabled ~ connAgntOrigIfExtraSetting ~ connAgntOrigIfPhoneNo ~ connAgntOrigIfAuthUsername ~ connAgntOrigIfAuthPassword + connAgntOrigIdleTimeoutPSODreqBySMS + connAttachPSODrequesterSMS, added to changedIPAddressEvent - object identity 'commonDeviceControl' + ctrlApplication"
      }, 
      {
        "revision": "2004-10-28 16:51", 
        "description": "1.0.0.6 Added basicAgentIPAddressNew and changedIPAddressEvent."
      }, 
      {
        "revision": "2004-02-03 11:33", 
        "description": "1.0.0.5 Added basicAgentIPAddress. "
      }, 
      {
        "revision": "2003-10-30 09:46", 
        "description": "1.0.0.4 Updated heartBeat interval range."
      }, 
      {
        "revision": "2003-09-11 10:07", 
        "description": "1.0.0.3 Added back alarmIDX. Changed alarm table index to alarmIDX."
      }, 
      {
        "revision": "2003-09-10 10:35", 
        "description": "1.0.0.2 Removed the following from alarm table: alarmIDX alarmTrendIndication alarmEquipmentCIN alarmEquipmentDescription alarmEquipmentSerialNo alarmPhysicalAlias Removed the following trend indications: TrendIndication CIN SerialNo Made alarmID index into alarm table. Created textual convention, alarmDescrString. Changed alarmAdditionalText syntax to alarmDescrString. Updated alarmEquipmentCTA description to include use of 0 as CTA for stand-alone devices."
      }, 
      {
        "revision": "2003-09-09 16:44", 
        "description": "1.0.0.1 Added alarmTrapCounter to alarmTrap definition. Added alarmID to alarm table. Replaced UTCTime with standard DateAndTime. Removed UTCTime textual convention. "
      }, 
      {
        "revision": "2003-08-06 15:45", 
        "description": "1.0.0.0 Created."
      }
    ], 
    "lastupdated": "201212181725Z", 
    "organization": "Wireless Innovations", 
    "contactinfo": "Industriering 10 86675 Buchdorf Germany", 
    "description": "MIB for Wireless Innovations distributed management system."
  }, 
  "AlarmDescrString": {
    "name": "AlarmDescrString", 
    "class": "textualconvention", 
    "type": {
      "type": "OCTET STRING", 
      "class": "type", 
      "constraints": {
        "size": [
          {
            "min": 0, 
            "max": 128
          }
        ]
      }
    }, 
    "status": "current", 
    "description": "An octet string containing alarm description information in human-readable form."
  }, 
  "Version": {
    "name": "Version", 
    "class": "textualconvention", 
    "type": {
      "type": "OCTET STRING", 
      "class": "type", 
      "constraints": {
        "size": [
          {
            "min": 0, 
            "max": 0
          }, 
          {
            "min": 5, 
            "max": 15
          }
        ]
      }
    }, 
    "status": "current", 
    "description": "Hierarchical nested major and minor version, release, and build identification. Syntax: '<major>.<minor>.<release>.<build>' or empty string. Each part has 1 up to 3 digits (0-9), '.<build>' at the end is optional. Example: 1.0.5.328"
  }, 
  "IPAddressAndPort": {
    "name": "IPAddressAndPort", 
    "class": "textualconvention", 
    "type": {
      "type": "OCTET STRING", 
      "class": "type", 
      "constraints": {
        "size": [
          {
            "min": 7, 
            "max": 21
          }
        ]
      }
    }, 
    "status": "current", 
    "description": "An IP address with up to 21 characters in the format a.b.c.d:port, e.g. 192.168.1.2:164. If the port is omitted, then the colon must also be omitted. Note! In future versions this may be extended to support IPv6 addresses (2001:0db8:85a3:08d3:1319:8a2e:0370:7344) and DNS names (testhost.testcompany.com). Then this TC will change to an octet string without size range (or just an upper limit)."
  }, 
  "SpecificProblem": {
    "name": "SpecificProblem", 
    "class": "textualconvention", 
    "type": {
      "type": "Unsigned32", 
      "class": "type", 
      "constraints": {
        "range": [
          {
            "min": 0, 
            "max": 65535
          }
        ]
      }
    }, 
    "status": "current", 
    "description": "Specific Problem is defined in accordance with definitions given in ITU-T Recommendation X.733 clause 8.1.2.2. The list of Specific Problem codes for Wireless Innovations Products is maintained in Buchdorf."
  }, 
  "Severity": {
    "name": "Severity", 
    "class": "textualconvention", 
    "type": {
      "type": "INTEGER", 
      "class": "type", 
      "constraints": {
        "enumeration": {
          "information": 6, 
          "major": 2, 
          "indeterminate": 0, 
          "warning": 4, 
          "critical": 1, 
          "cleared": 5, 
          "minor": 3
        }
      }
    }, 
    "status": "current", 
    "description": "According to X733 and common alarm list: 0=indeterminate 1=critical 2=major 3=minor 4=warning 5=cleared 6=information"
  }, 
  "EventType": {
    "name": "EventType", 
    "class": "textualconvention", 
    "type": {
      "type": "INTEGER", 
      "class": "type", 
      "constraints": {
        "enumeration": {
          "communications": 1, 
          "environmental": 5, 
          "qualityOfService": 2, 
          "processingError": 3, 
          "equipment": 4
        }
      }
    }, 
    "status": "current", 
    "description": "The event type of an alarm. See also: - ISO/IEC 10164-4, chapter 8.1.1 - ISO/IEC 10165-2, chapter 14.2"
  }, 
  "ProbableCause": {
    "name": "ProbableCause", 
    "class": "textualconvention", 
    "type": {
      "type": "INTEGER", 
      "class": "type", 
      "constraints": {
        "enumeration": {
          "applicationSubsystemFailure": 2, 
          "pressureUnacceptable": 36, 
          "communicationsSubsystemFailure": 6, 
          "materialSupplyExhausted": 30, 
          "lossOfFrame": 28, 
          "floodDetected": 19, 
          "temperatureUnacceptable": 50, 
          "softwareProgramError": 48, 
          "softwareError": 46, 
          "communicationsProtocolError": 5, 
          "fileError": 17, 
          "timingProblem": 52, 
          "outputDeviceError": 33, 
          "snmpTrapLinkUp": 103, 
          "transmitterFailure": 55, 
          "bandwidthReduced": 3, 
          "unknown": 0, 
          "snmpTrapLinkDown": 102, 
          "snmpTrapColdStart": 100, 
          "enclosureDoorOpen": 14, 
          "retransmissionRateExcessive": 45, 
          "remoteNodeTransmissionError": 42, 
          "softwareProgramAbnormallyTerminated": 47, 
          "snmpTrapEgpNeighborloss": 105, 
          "degradedSignal": 13, 
          "versionMismatch": 57, 
          "thresholdCrossed": 51, 
          "multiplexerProblem": 31, 
          "snmpTrapEnterpriseSpecific": 106, 
          "pumpFailure": 38, 
          "receiverFailure": 41, 
          "lossOfSignal": 29, 
          "toxicLeakDetected": 53, 
          "excessiveVibration": 16, 
          "snmpTrapAuthenticationFailure": 104, 
          "leakDetected": 26, 
          "inputDeviceError": 24, 
          "transmitFailure": 54, 
          "snmpTrapWarmStart": 101, 
          "cpuCyclesLimitExceeded": 10, 
          "responseTimeExcessive": 44, 
          "callEstablishmentError": 4, 
          "dataSetOrModemError": 12, 
          "adapterError": 1, 
          "congestion": 8, 
          "snmpTrapLinkUpDown": 107, 
          "storageCapacityProblem": 49, 
          "performanceDegraded": 34, 
          "framingError": 20, 
          "queueSizeExceeded": 39, 
          "outOfMemory": 32, 
          "receiveFailure": 40, 
          "powerProblem": 35, 
          "resourceAtOrNearingCapacity": 43, 
          "equipmentMalfunction": 15, 
          "heatingOrVentilationOrCoolingSystemProblem": 21, 
          "dTEDCEInterfaceError": 11, 
          "configurationOrCustomizationError": 7, 
          "underlyingResourceUnavailable": 56, 
          "humidityUnacceptable": 22, 
          "lANError": 25, 
          "fireDetected": 18, 
          "corruptData": 9, 
          "localNodeTransmissionError": 27, 
          "processorProblem": 37, 
          "inputOutputDeviceError": 23
        }
      }
    }, 
    "status": "current", 
    "description": "See ISO/IEC 10164-4, chapter 8.1.2.1"
  }, 
  "CTA": {
    "name": "CTA", 
    "class": "textualconvention", 
    "type": {
      "type": "OCTET STRING", 
      "class": "type", 
      "constraints": {
        "size": [
          {
            "min": 1, 
            "max": 64
          }
        ]
      }
    }, 
    "status": "current", 
    "description": "This is the Common Topology Address and is built in a hierarchical form: First_level_add, second_level_add, third_level_add,.... Syntax is <integer>.<integer>.<integer>.... V1.2.2.0 extension: There are cases where there are multiple nodes using the same hierarchy levels. In order to distinguish between these nodes, additional parameters are needed. These optional parameters follow the final hierarchy level, beginning with a colon. The parameter list is also colon-delimited. The interpretation of these parameters is defined through the alarmID-specific master database and is well known to both the agent and the manager. Extended syntax is <TopoAdr>{.<TopoAdr>}[{:<ParN>}] {enclosed in curly brackets means occurrence zero, one or more times} [enclosed in square brackets is optional] <TopoAdr>: CTA as already defined in previous versions. Allowed characters {'0'..'9'} <ParN>: Additional Parameter. Allowed characters {'0'..'9'}, minus sign '-', 'e', 'E' and decimal point '.' This provides for integer and floating point parameters. If a <ParN> contains a 'e', 'E' or '.' the manager has to do a string to float conversion of <ParN> otherwise <ParN> has to be converted from String to integer. V1.6.0.0 extension: - any FQDN (Fully Qualified Domain Name), SDN (System Distinguish Name) or similar may also be used as CTA - String Parameter may also be used as Additional Parameter Therefore allowed characters for <TopoAdr> and <ParN> introduced with V1.2.2.0 extension are now any ASCII character. Example 1: First level=RS485 address (i.e. Midas master unit, or BCell subrack) Second level= Midas remote unit, or BCell slot address in a subrack, Third level=..Midas NSO out of Midas remote unit or BCell remote unit attached to a slot..) Example 2: Non-distributed system such as the NodeM would use 0 as its CTA. Example 3: CTA=0:2:1 -> NodeA alarm at RF slot 2, group 1 Example 4: CTA=0:1 -> NodeA external alarm of the device plugged into input 1 of the user-interface connector. Example 5: CTA=Rack1.Subrack2.Slot4 -> ION-U Slot 4 in Subrack 2 of Rack 1 Example 6: CTA=SRMU128.RU3:1:2100MHz -> ION-M RU 3 of optical link 128, parameter 1 = 1, parameter 2 = '2100MHz' (as string)"
  }, 
  "ConnectivityType": {
    "name": "ConnectivityType", 
    "class": "textualconvention", 
    "type": {
      "type": "INTEGER", 
      "class": "type", 
      "constraints": {
        "enumeration": {
          "lan": 8, 
          "csod": 1, 
          "dcod": 5, 
          "csao": 2, 
          "sms": 7, 
          "dcao": 6, 
          "psod": 3, 
          "psao": 4
        }
      }
    }, 
    "status": "current", 
    "description": "Type of connection the agent is connected to the network. 1=CSOD (Circuit Switched network, 'On Demand') 2=CSAO (Circuit Switched network, 'Always On') 3=PSOD (Packet Switched network, 'On Demand') 4=PSAO (Packet Switched network, 'Always On') 5=DCOD (circuit switched Direct Connection over serial line, 'On Demand') 6=DCAO (circuit switched Direct Connection over serial line, 'Always On') 7=SMS (Short Message Service, this is always a 'On Demand' connection) 8=LAN (Local Area Network, this is always a 'Always On' connection)"
  }, 
  "NetworkType": {
    "name": "NetworkType", 
    "class": "textualconvention", 
    "type": {
      "type": "INTEGER", 
      "class": "type", 
      "constraints": {
        "enumeration": {
          "cs": 1, 
          "ps": 2, 
          "lan": 5, 
          "sms": 4, 
          "dc": 3
        }
      }
    }, 
    "status": "current", 
    "description": "Network type. 1=CS (Circuit Switched network) 2=PS (Packet Switched network) 3=DC (circuit switched Direct Connection over serial line) 4=SMS (Short Message Service) 5=LAN (Local Area Network)"
  }, 
  "ConnectionType": {
    "name": "ConnectionType", 
    "class": "textualconvention", 
    "type": {
      "type": "INTEGER", 
      "class": "type", 
      "constraints": {
        "enumeration": {
          "alwaysOn": 2, 
          "notApplicable": 0, 
          "onDemand": 1
        }
      }
    }, 
    "status": "current", 
    "description": "Actual type of connection the agent is connected to the network. 0= Not applicable for the network type 1='On Demand' 2='Always On'"
  }, 
  "NotificationType": {
    "name": "NotificationType", 
    "class": "textualconvention", 
    "type": {
      "type": "INTEGER", 
      "class": "type", 
      "constraints": {
        "enumeration": {
          "inform": 2, 
          "trap": 1
        }
      }
    }, 
    "status": "current", 
    "description": "Notification type used for outgoing notifications. 1=SNMP trap 2=SNMP inform"
  }, 
  "Severity4Set": {
    "name": "Severity4Set", 
    "class": "textualconvention", 
    "type": {
      "type": "INTEGER", 
      "class": "type", 
      "constraints": {
        "range": [
          {
            "min": -128, 
            "max": 127
          }
        ]
      }
    }, 
    "displayhint": "b", 
    "status": "current", 
    "description": "Bitcoded value indication the supported alarm severity levels within a SET: Bit0=indeterminate (0x01) Bit1=critical (0x02) Bit2=major (0x04) Bit3=minor (0x08) Bit4=warning (0x10) Bit5=disable (0x20) Bit6=information (0x40) Bit7 not used, always not set"
  }, 
  "PositiveIntegerButNotZero": {
    "name": "PositiveIntegerButNotZero", 
    "class": "textualconvention", 
    "type": {
      "type": "Integer32", 
      "class": "type", 
      "constraints": {
        "range": [
          {
            "min": 1, 
            "max": 2147483647
          }
        ]
      }
    }, 
    "status": "current", 
    "description": "All integers > 0"
  }, 
  "PositiveIntegerIncludingZero": {
    "name": "PositiveIntegerIncludingZero", 
    "class": "textualconvention", 
    "type": {
      "type": "Integer32", 
      "class": "type", 
      "constraints": {
        "range": [
          {
            "min": 0, 
            "max": 2147483647
          }
        ]
      }
    }, 
    "status": "current", 
    "description": "All integers >= 0"
  }, 
  "commonDeviceObjects": {
    "name": "commonDeviceObjects", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1", 
    "class": "objectidentity", 
    "status": "current", 
    "description": "Objects valid for common objects."
  }, 
  "commonDeviceBasic": {
    "name": "commonDeviceBasic", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.1", 
    "class": "objectidentity", 
    "status": "current", 
    "description": "Basic information."
  }, 
  "basicAgentVersion": {
    "name": "basicAgentVersion", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.1.1", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "Version", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "This is the software version of the agent and is determined according to the software version control rules of the particular device."
  }, 
  "basicCurrentMibVersion": {
    "name": "basicCurrentMibVersion", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.1.2", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "Version", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "This object denotes the current MIB's version. This value is built by the first line of the DESCRIPTION value of the most recent REVISION statement of the current MIB's MODULE IDENTITY object. Please note, that this comment makes only sense if it is included and read in the component specific MIB."
  }, 
  "basicWirelessInnovationsMibVersion": {
    "name": "basicWirelessInnovationsMibVersion", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.1.3", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "Version", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "The version of the WIRELESS-INNOVATIONS-PRODUCTS-MIB, which is included in this (component specific) MIB. This value is the same as the first line of the DESCRIPTION value of the most recent REVISION statement of the WIRELESS-INNOVATIONS-PRODUCTS-MIB's MODULE IDENTITY object (wirelessInnovations)."
  }, 
  "basicCurrentTime": {
    "name": "basicCurrentTime", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.1.4", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "DateAndTime", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "Current time in Coordinated Universal Time (UTC) format."
  }, 
  "basicAgentIPAddress": {
    "name": "basicAgentIPAddress", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.1.5", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "IPAddressAndPort", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "obsolete", 
    "description": "Note! This object is obsolete and no longer supported. New object is 'connManOrigAgentIPAddressCS'. This is the IP address of the DCM used in dial-in access. Since the DCM does not use a port number for the agent, setting the port has no affect. Setting this address to 0.0.0.0 causes the DCM to revert back to the default IP address."
  }, 
  "basicAgentIPAddressNew": {
    "name": "basicAgentIPAddressNew", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.1.6", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "IPAddressAndPort", 
      "class": "type"
    }, 
    "maxaccess": "accessible-for-notify", 
    "status": "current", 
    "description": "This OID is used in the changedIPAddressEvent only."
  }, 
  "basicAgentLocationIdentification": {
    "name": "basicAgentLocationIdentification", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.1.7", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Geographic location identification of the Agent, either GPS coordinates or the serving cell identification of the Agent's wireless modem (Location Area). If the Agent has a GPS receiver the GPS coordinates should be responded, otherwise the LA. If neither the GPS coordinates nor the LA is known to the Agent, an empty string should be responded. This location id is always a comma separated string. Syntax for GPS coordinates: 'GPS,<latitude>,<longitude>' <latitude>: numeric value (decimal), positive value for north, negative for south, including a decimal point. Allowed characters '-','0'..'9','.' <longitude>: numeric value (decimal), positive value for east, negative for west, including a decimal point. Allowed characters '-','0'..'9','.' E.g. 'GPS,42.4088172912598,-71.1735153198242', 'GPS,-1.2,12.34' Syntax for LA: 'LA,<mcc>,<mnc>,<lac>,<ci>' <mcc>: mobile country code, allowed characters '0'..'9' <mnc>: mobile network code, allowed characters '0'..'9' <lac>: location area code (decimal), allowed characters '0'..'9' <ci>: cell identity (decimal), allowed characters '0'..'9' If any value is unknown, it has to be left empty but the corresponding comma has to be provided. E.g. 'LA,123,12,67890,1234', 'LA,321,21,456,' "
  }, 
  "basicAgentLocationAlias": {
    "name": "basicAgentLocationAlias", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.1.8", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Alias name of the geographic location area (zone name) where the Agent is currently in. If the Agent does not support geographic location identification, an empty string should be responded."
  }, 
  "basicAgentOutOfOperationArea": {
    "name": "basicAgentOutOfOperationArea", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.1.9", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "TruthValue", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Indicates whether the Agent is currently out of operation. This may be caused e.g. by geographical location change (moving out of active areas / active zones) or by entering any other inactive operating mode (standby). This object has also to be sent within the changedParameterEvent notification, so the manager is able to track the operational state (availability status) of the Agent. The Manager has to consider that if this object is true, the Agent may not send any further notifications/alarms and may not accessible via remote connection until the Agent comes back to operation. If the Agent does not support geographic location identification and any other inactive operation modes, always false should be responded."
  }, 
  "basicAgentConditionChangedConfig": {
    "name": "basicAgentConditionChangedConfig", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.1.10", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "INTEGER", 
      "class": "type", 
      "constraints": {
        "enumeration": {
          "userMaintenance": 0, 
          "locationLatency": 2, 
          "locationChange": 1
        }
      }
    }, 
    "maxaccess": "accessible-for-notify", 
    "status": "current", 
    "description": "This OID is used in the changedParameterEvent only. Indicates the condition why the changedParameterEvent was fired. 0 = user maintenance via another user interface caused parameter changes. 1 = location (zone) change caused immediate parameter changes. 2 = location (zone) change caused parameter changes after latency expired (V1.6.0.0 extension). If the Agent does not support conditional configuration changes or the changedParameterEvent was fired because of user changes, 0 has to be used."
  }, 
  "basicGpsData": {
    "name": "basicGpsData", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.1.11", 
    "class": "objectidentity", 
    "status": "current", 
    "description": "GPS data and related Objects. If the Agent doesn't support GPS data at all, always 'no such object' has to be returned to any request within this section."
  }, 
  "gpsDataTimestamp": {
    "name": "gpsDataTimestamp", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.1.11.1", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "DateAndTime", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Timestamp of GPS data set reported by GPS device."
  }, 
  "gpsZoneName": {
    "name": "gpsZoneName", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.1.11.2", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Zone name related to GPS position (gpsLatitude/gpsLongitude) or empty string in case the position is not within a zone. Note! In case the actual position reflects the crossing of a common border of two zones (one zone left, other zone entered), the zone name of the entered zone is used here."
  }, 
  "gpsLatitude": {
    "name": "gpsLatitude", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.1.11.3", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Position latitude. Numeric value (decimal), positive value for north, negative for south, including a decimal point. Allowed characters '-','0'..'9','.'"
  }, 
  "gpsLongitude": {
    "name": "gpsLongitude", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.1.11.4", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Position longitude. Numeric value (decimal), positive value for east, negative for west, including a decimal point. Allowed characters '-','0'..'9','.'"
  }, 
  "gpsSpeed": {
    "name": "gpsSpeed", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.1.11.5", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Speed in km/h. Numeric value (decimal) including a decimal point. Allowed characters '0'..'9','.'"
  }, 
  "gpsBearingDegree": {
    "name": "gpsBearingDegree", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.1.11.6", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Direction in relation to north in degree. Numeric value (decimal) including a decimal point. Allowed characters '0'..'9','.'"
  }, 
  "gpsAltitude": {
    "name": "gpsAltitude", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.1.11.7", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Position altitude or empty string in case altitude is not available. Numeric value (decimal) including a decimal point. Allowed characters '0'..'9','.'"
  }, 
  "gpsNoOfSatellites": {
    "name": "gpsNoOfSatellites", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.1.11.8", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "Integer32", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Number of used satellites (decimal)."
  }, 
  "gpsEventData": {
    "name": "gpsEventData", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.1.11.50", 
    "class": "objectidentity", 
    "status": "current", 
    "description": "Additional GPS event data."
  }, 
  "gpsEventType": {
    "name": "gpsEventType", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.1.11.50.1", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "INTEGER", 
      "class": "type", 
      "constraints": {
        "enumeration": {
          "gpsZoneLeaving": 4, 
          "gpsHeartbeat": 5, 
          "stopMovingDetected": 2, 
          "gpsZoneEntering": 3, 
          "startMovingDetected": 1
        }
      }
    }, 
    "maxaccess": "accessible-for-notify", 
    "status": "current", 
    "description": "GPS event type. 1 = Agent has detected start moving 2 = Agent has detected stop moving 3 = Agent has entered a GPS zone 4 = Agent has left a GPS zone 5 = GPS event heartbeat Note! In case the actual position reflects the crossing of a common border of two zones (one zone left, other zone entered), only the entering of the new zone is indicated."
  }, 
  "gpsEventTime": {
    "name": "gpsEventTime", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.1.11.50.2", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "DateAndTime", 
      "class": "type"
    }, 
    "maxaccess": "accessible-for-notify", 
    "status": "current", 
    "description": "GPS event generation time in Coordinated Universal Time (UTC) format."
  }, 
  "gpsEvent": {
    "name": "gpsEvent", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.1.11.50.3", 
    "class": "notificationtype", 
    "objects": [
      {
        "object": "sysName", 
        "module": "SNMPv2-MIB"
      }, 
      {
        "object": "connAgentUID", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgentUID2", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "gpsEventType", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "gpsEventTime", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "gpsDataTimestamp", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "gpsZoneName", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "gpsLatitude", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "gpsLongitude", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "gpsSpeed", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "gpsBearingDegree", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "gpsAltitude", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "gpsNoOfSatellites", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }
    ], 
    "status": "current", 
    "description": "Notification sent by the agent to indicate the occurrence of any type of GPS event (see gpsEventType)."
  }, 
  "gpsEventConfiguration": {
    "name": "gpsEventConfiguration", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.1.11.51", 
    "class": "objectidentity", 
    "status": "current", 
    "description": "Additional GPS event configuration data."
  }, 
  "gpsEventEnabled": {
    "name": "gpsEventEnabled", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.1.11.51.1", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "TruthValue", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "Object that shows resp. controls whether the GPS event notification is enabled or not."
  }, 
  "gpsEventDestinationIsAlarmRecipient": {
    "name": "gpsEventDestinationIsAlarmRecipient", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.1.11.51.2", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "TruthValue", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "Object that shows resp. controls whether the GPS event notification destination is the standard notification destination (true: destination is alarmRecipient) or not (false: destination is gpsEventDestination)."
  }, 
  "gpsEventDestination": {
    "name": "gpsEventDestination", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.1.11.51.3", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "IPAddressAndPort", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "Object that shows resp. controls the destination of the GPS event notification. Setting the IP address to 0.0.0.0 will also have the effect of disabling the notification forwarding (like setting gpsEventEnabled to false). Note! In case gpsEventDestinationIsAlarmRecipient is true, this object is just read-only and reflects the alarmRecipient object setting. Then a SET request on this object will fail with an appropriate error."
  }, 
  "gpsHeartbeatInterval": {
    "name": "gpsHeartbeatInterval", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.1.11.51.4", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "Gauge32", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "Object that shows resp. controls the GPS event heartbeat interval (in minutes). Set this object to 0 in order to disable the GPS event of type heartbeat. Set this object to any value but 0 in order to enable the GPS event heartbeat notification. Default value is 0. Allowed range is 0 to 6000 minutes (or 0 to 100 hours)."
  }, 
  "commonDeviceAlarm": {
    "name": "commonDeviceAlarm", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2", 
    "class": "objectidentity", 
    "status": "current", 
    "description": "Alarm objects."
  }, 
  "alarmRecipient": {
    "name": "alarmRecipient", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.1", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "IPAddressAndPort", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "The recipient of all notifications. This IP address can be changed in order to switch the recipient to another (auxiliary) recipient. It can be useful if the OMC must be switched off for maintenance or other purpose. NOTE: Setting the IP address to 0.0.0.0 will have the effect of disabling notification forwarding. "
  }, 
  "alarmForwardingEnabled": {
    "name": "alarmForwardingEnabled", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.2", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "TruthValue", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "Set this value to true(1) in order to enable alarm forwarding. Note, that the alarm recipients IP address has to be set to alarmRecipient prior to enable alarm forwarding. Set this value to false(2) in order to disable alarm forwarding."
  }, 
  "alarmHeartbeatInterval": {
    "name": "alarmHeartbeatInterval", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.3", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "Gauge32", 
      "class": "type", 
      "constraints": {
        "range": [
          {
            "min": 0, 
            "max": 6000
          }
        ]
      }
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "The heartbeat mechanism is an alternative to OMC polling. A heartbeatEvent notification is sent by the agent to indicate that the device and the connection are still active. Set this object to 0 in order to disable the heartbeat. Set this object to any value but 0 in order to enable the heartbeatEvent notification. The value set determines the interval of the heartbeatEvents in minutes. Default value is 0. Allowed range is 0 to 6000 minutes (or 0 to 100 hours)."
  }, 
  "alarmSynchronize": {
    "name": "alarmSynchronize", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.4", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "TruthValue", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "This object must be set to true(1) in order to force the agent to resend all active alarms to the current manager. Setting this object to false(2) has no effect. On GET requests always false(2) is returned."
  }, 
  "alarmTrapCounter": {
    "name": "alarmTrapCounter", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.5", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "Counter32", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "This is the counter indicating how many total notifications have been sent from the device since last bootup (or reboot). The counter is included in every private/enterprise notification. The counter starts at 0 on system bootup (or reboot). Upon wrapping, the counter starts at 1, not 0. Since the standard notifications ColdStart and WarmStart will be implemented, any boot (or reboot) sequence will trigger the following notification sequence: 1. ColdStart/WarmStart notification. 1a changedIPAddressEvent with counter = 0 if IP address has been changed during agent downtime. 1b swActivationProgress with counter + 1 resp. counter = 0 (depending on 1a was fired or not) if agent startup has triggert the activation of a new software package. Note: This is an optional notification, it depends on the agent implementation whether he is able to detect that the startup was triggert by the activation of a new software package or not. 2. agentUpAndRunningEvent with counter + 1 resp. counter = 0 (depending on 1a/1b was fired or not) if agent is finally up and running. 2a HeartBeat notification with counter + 1 if HeartBeat enabled. 3. alarm/other notifications with counter + 1 according to alarm/other conditions detected once the agent starts operating."
  }, 
  "alarmTable": {
    "name": "alarmTable", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.6", 
    "nodetype": "table", 
    "class": "objecttype", 
    "maxaccess": "not-accessible", 
    "status": "current", 
    "description": "The alarm table lists all the alarms currently active into the equipment. An entry is added to the table anytime an alarm condition raises. An entry is removed from the table according to the following conditions: 1. the alarm condition ceases (e.g. door open-->door closed). Any Manager GET/GETbulk shall leave the table unaffected 2. the alarm condition is a lacthed-type (e.g. configuration error) and no clear events is possible, therefore the only way to remove the entry from the list is to clear automatically after a GET/GETbulk from the manager. This kind of alarms will always be assigned a severity level 'information (6)' "
  }, 
  "alarmEntry": {
    "name": "alarmEntry", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.6.1", 
    "nodetype": "row", 
    "class": "objecttype", 
    "maxaccess": "not-accessible", 
    "indices": [
      {
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB", 
        "object": "alarmIDX", 
        "implied": 0
      }
    ], 
    "status": "current", 
    "description": "Alarm table entry."
  }, 
  "alarmIDX": {
    "name": "alarmIDX", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.6.1.1", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "Unsigned32", 
      "class": "type"
    }, 
    "maxaccess": "not-accessible", 
    "status": "current", 
    "description": "Table index to identify the instance."
  }, 
  "alarmID": {
    "name": "alarmID", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.6.1.2", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "Integer32", 
      "class": "type", 
      "constraints": {
        "range": [
          {
            "min": 1, 
            "max": 100000
          }
        ]
      }
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "This is the most generic identifier of the problem."
  }, 
  "alarmSpecificProblem": {
    "name": "alarmSpecificProblem", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.6.1.3", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "SpecificProblem", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "X733 compliance: specific problem unique code,according to a common alarm list. This unique list will be maintained at a central location."
  }, 
  "alarmPerceivedSeverity": {
    "name": "alarmPerceivedSeverity", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.6.1.4", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "Severity", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "According to X733 and common alarm list: 0=indeterminate 1=critical 2=major 3=minor 4=warning 5=cleared 6=information"
  }, 
  "alarmEventDateTime": {
    "name": "alarmEventDateTime", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.6.1.5", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "DateAndTime", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "X733 compatibility: time stamp for alarm condition change changes can occur on severity level (including set and clear) "
  }, 
  "alarmEventType": {
    "name": "alarmEventType", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.6.1.6", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "EventType", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "According to X733 and common alarm list:The Event Type categorises the alarm."
  }, 
  "alarmProbableCause": {
    "name": "alarmProbableCause", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.6.1.7", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "ProbableCause", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "According to X733 and common alarm list:The Probable Cause defines further qualification of an alarm."
  }, 
  "alarmAdditionalText": {
    "name": "alarmAdditionalText", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.6.1.8", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "AlarmDescrString", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "According to X733 and common alarm list: The Additional Text allows a free form text description to be reported. It contains a formatted description of the alarm. If additional information regarding the alarm is unknown, a zero-length string may be used. Otherwise, no string over 128 bytes may be sent."
  }, 
  "alarmEquipmentCTA": {
    "name": "alarmEquipmentCTA", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.6.1.9", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "CTA", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Must be a Common Topology Address (CTA) This represents the topological address of the equipment below the Agent and references the alarm source. It may also contain optional parameters, details see textual convention CTA."
  }, 
  "alarmPhysicalIndex": {
    "name": "alarmPhysicalIndex", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.6.1.10", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "PhysicalIndex", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "This objects carries the value of entPhysicalIndex of the affected component."
  }, 
  "alarmEquipmentPointer": {
    "name": "alarmEquipmentPointer", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.6.1.11", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "VariablePointer", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "The purpose of this object is to provide a pointer (OID) into the component specific MIB that relates most directly to this particular alarm. If this alarm is best described by multiple objects in the component specific MIB, the object should be closest common OID. An example would be a MMR remote unit instance that is coded in a table of MMR instances. "
  }, 
  "alarmChangedParameterPointer": {
    "name": "alarmChangedParameterPointer", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.7", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "VariablePointer", 
      "class": "type"
    }, 
    "maxaccess": "accessible-for-notify", 
    "status": "current", 
    "description": "This OID is used in the changedParameterEvent only. It is a pointer to a component-specific object, whose parameter was changed. It points to the highest part of the tree where changes where made. That is, the manager is required to perform a WALK on this OID in order to get the current settings."
  }, 
  "alarmSeveritiesSupported4Set": {
    "name": "alarmSeveritiesSupported4Set", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.8", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "Severity4Set", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Bitcoded value indication the supported alarm severity levels within a SET via the alarmConfigTable: Bit0=indeterminate (0x01) Bit1=critical (0x02) Bit2=major (0x04) Bit3=minor (0x08) Bit4=warning (0x10) Bit5=disable (0x20) Bit6=information (0x40) Bit7 not used, always not set E.g: 00111110 (0x3E, 62): critical, major, minor, warning and disable supported. 0: setting/changing alarm severity levels not supported at all."
  }, 
  "alarmConfigTable": {
    "name": "alarmConfigTable", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.9", 
    "nodetype": "table", 
    "class": "objecttype", 
    "maxaccess": "not-accessible", 
    "status": "obsolete", 
    "description": "Agent alarm configuration table. This table lists all alarms supported by the agent. It is used to read resp. change default alarm parameter settings. This settings apply system-wide, even in distributed systems for every CTA."
  }, 
  "alarmConfigEntry": {
    "name": "alarmConfigEntry", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.9.1", 
    "nodetype": "row", 
    "class": "objecttype", 
    "maxaccess": "not-accessible", 
    "indices": [
      {
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB", 
        "object": "alarmConfig4alarmID", 
        "implied": 0
      }
    ], 
    "status": "obsolete", 
    "description": "Alarm configuration table entry."
  }, 
  "alarmConfig4alarmID": {
    "name": "alarmConfig4alarmID", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.9.1.1", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "Integer32", 
      "class": "type", 
      "constraints": {
        "range": [
          {
            "min": 1, 
            "max": 100000
          }
        ]
      }
    }, 
    "maxaccess": "read-only", 
    "status": "obsolete", 
    "description": "Referenced alarm ID: This is the most generic identifier of the alarm."
  }, 
  "alarmConfigSeverity": {
    "name": "alarmConfigSeverity", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.9.1.2", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "Severity", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "obsolete", 
    "description": "Reading this object indicates the current level the alarm is set at. Setting this object changes the current level accordingly. Note! Severity 5=cleared in this context indicates that the alarm is disabled/to be disabled. Setting this object to any other level than supported (indicated by alarmSeveritiesSupported4Set) is not valid and results in a return of wrongValue."
  }, 
  "alarmUsertextTable": {
    "name": "alarmUsertextTable", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.10", 
    "nodetype": "table", 
    "class": "objecttype", 
    "maxaccess": "not-accessible", 
    "status": "obsolete", 
    "description": "Agent alarm user text configuration table. This table lists all alarms that support user defined text. It is used to read resp. change default alarm user text settings. This settings specific for every CTA within a distributed system."
  }, 
  "alarmUsertextEntry": {
    "name": "alarmUsertextEntry", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.10.1", 
    "nodetype": "row", 
    "class": "objecttype", 
    "maxaccess": "not-accessible", 
    "indices": [
      {
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB", 
        "object": "alarmUsertext4CTA", 
        "implied": 0
      }, 
      {
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB", 
        "object": "alarmUsertext4alarmID", 
        "implied": 0
      }
    ], 
    "status": "obsolete", 
    "description": "Alarm user text configuration table entry."
  }, 
  "alarmUsertext4CTA": {
    "name": "alarmUsertext4CTA", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.10.1.1", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "CTA", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "obsolete", 
    "description": "Referenced Common Topology Address. It may also contain optional parameters, details see textual convention CTA."
  }, 
  "alarmUsertext4alarmID": {
    "name": "alarmUsertext4alarmID", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.10.1.2", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "Integer32", 
      "class": "type", 
      "constraints": {
        "range": [
          {
            "min": 1, 
            "max": 100000
          }
        ]
      }
    }, 
    "maxaccess": "read-only", 
    "status": "obsolete", 
    "description": "Referenced alarm ID: This is the most generic identifier of the alarm."
  }, 
  "alarmUsertext": {
    "name": "alarmUsertext", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.10.1.3", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type", 
      "constraints": {
        "size": [
          {
            "min": 0, 
            "max": 20
          }
        ]
      }
    }, 
    "maxaccess": "read-write", 
    "status": "obsolete", 
    "description": "User defined text for referenced alarmID at referenced CTA."
  }, 
  "alarmThresholds": {
    "name": "alarmThresholds", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.11", 
    "class": "objectidentity", 
    "status": "current", 
    "description": "With this section alarm thresholds are handled. If the agent doesn't support alarm threshold management at all, always 'no such object' has to be returned to any request within this section."
  }, 
  "alarmThresholdTable": {
    "name": "alarmThresholdTable", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.11.1", 
    "nodetype": "table", 
    "class": "objecttype", 
    "maxaccess": "not-accessible", 
    "status": "current", 
    "description": "This table provides threshold information for each alarm that has user-defined thresholds. Thresholds can be thought of as single or ranged. A single threshold is one in which an alarm is generated if a measurement falls below or rises above the threshold. For example, if we have a temperature threshold of 50 C, any temperature above this threshold will generate an alarm. A range in this case is not needed. However, common sense dictates that a value which cannot be represented by the hardware should not be used in a SET, so an upper range (or lower as the case may be) is still implied. The settings in this table are specific for every CTA within a distributed system. They are also specific to a particular alarm type, represented by the alarm ID. Since there may be as many as two thresholds for an alarm (minimum and maximum), this must be accounted for also. Therefore, this table is indexed by the following: - alarmThreshold4CTA - alarmThresholdalarmID - alarmThresholdIdx If not applicable to a particular agent implementation, 'no such object' must be returned to any request within this table. All alarms with a single threshold or simple linear ranged threshold can be completely described by the few basic objects in this table and the network manager can easily set up these thresholds properly. In this case, alarmThresholdPointerToValueLookupTableMainIndex is set to 0. For example, NodeX DL and UL RSSI alarms fall into this category. For alarms with more complex threshold ranges or whose set values cannot describe them, the object, alarmThresholdPointerToValueLookupTableMainIndex points into alarmThresholdValueLookupTable where each allowed value is defined and described. These alarms include NodeX VSWR ratios, external alarm polarity, etc."
  }, 
  "alarmThresholdEntry": {
    "name": "alarmThresholdEntry", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.11.1.1", 
    "nodetype": "row", 
    "class": "objecttype", 
    "maxaccess": "not-accessible", 
    "indices": [
      {
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB", 
        "object": "alarmThreshold4CTA", 
        "implied": 0
      }, 
      {
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB", 
        "object": "alarmThreshold4alarmID", 
        "implied": 0
      }, 
      {
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB", 
        "object": "alarmThresholdIdx", 
        "implied": 0
      }
    ], 
    "status": "current", 
    "description": "Alarm threshold configuration table entry."
  }, 
  "alarmThreshold4CTA": {
    "name": "alarmThreshold4CTA", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.11.1.1.1", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "CTA", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "1st table index. Referenced Common Topology Address. In distributed systems the threshold for the same alarm may be configured different depending on the topology address of the alarm source. It may also contain optional parameters, details see textual convention CTA."
  }, 
  "alarmThreshold4alarmID": {
    "name": "alarmThreshold4alarmID", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.11.1.1.2", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "Integer32", 
      "class": "type", 
      "constraints": {
        "range": [
          {
            "min": 1, 
            "max": 100000
          }
        ]
      }
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "2nd table index. Referenced alarm ID: This is the most generic identifier of the alarm."
  }, 
  "alarmThresholdIdx": {
    "name": "alarmThresholdIdx", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.11.1.1.3", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "INTEGER", 
      "class": "type", 
      "constraints": {
        "range": [
          {
            "min": 1, 
            "max": 2
          }
        ]
      }
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Some alarms have just a single threshold, others have a minimum and a maximum threshold. This index identifies whether this is a single, minimum, or maximum threshold. Possible values: 1 - single or minimum threshold 2 - maximum threshold"
  }, 
  "alarmThresholdDescription": {
    "name": "alarmThresholdDescription", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.11.1.1.4", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Textual description of the referenced threshold entry."
  }, 
  "alarmThresholdUnit": {
    "name": "alarmThresholdUnit", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.11.1.1.5", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Unit of the referenced threshold entry. E.g. dB, dBm, Hz, ... or empty string."
  }, 
  "alarmThresholdScale": {
    "name": "alarmThresholdScale", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.11.1.1.6", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "Integer32", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "This is the scale factor for the referenced threshold entry and only applies to simple thresholds. The value should be 0 in the case of a complex threshold. Otherwise, this number is a base 10 exponent value. It applies to the following values: - alarmThresholdStepValue - alarmThresholdMinValueAllowed - alarmThresholdMaxValueAllowed - alarmThresholdActValue All these values are multiplied with alarmThresholdScale power of 10. E.g.alarmThresholdActValue is 125 and alarmThresholdScale is -1 ==> real actual value is 12.5"
  }, 
  "alarmThresholdStepValue": {
    "name": "alarmThresholdStepValue", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.11.1.1.7", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "Integer32", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "This object only applies to simple thresholds. It is used to identify the discrete intermediate values of the complete threshold range from alarmThresholdMinValueAllowed to alarmThresholdMaxValueAllowed. In the case of complex thresholds, the value should be 0."
  }, 
  "alarmThresholdMinValueAllowed": {
    "name": "alarmThresholdMinValueAllowed", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.11.1.1.8", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "Integer32", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Possible values: Simple thresholds with defined ranges: This is the allowed minimum value of the threshold range. Single minimum thresholds: This is the value the entity should not fall below. Single maximum thresholds and complex thresholds: This value should be 0."
  }, 
  "alarmThresholdMaxValueAllowed": {
    "name": "alarmThresholdMaxValueAllowed", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.11.1.1.9", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "Integer32", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Possible values: Simple thresholds with defined ranges: This is the allowed maximum value of the threshold range. Single maximum thresholds: This is the value the entity should not rise above. Single minimum thresholds and complex thresholds: This value should be 0."
  }, 
  "alarmThresholdActValue": {
    "name": "alarmThresholdActValue", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.11.1.1.10", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "Integer32", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "This is the actual value of the referenced threshold entry. For simple threshold ranges, please refer to alarmThresholdMinValueAllowed and alarmThresholdMaxValueAllowed for the allowed range. Complex ranges are defined by corresponding entries in alarmThresholdValueLookupTable."
  }, 
  "alarmThresholdPointerToValueLookupTableMainIndex": {
    "name": "alarmThresholdPointerToValueLookupTableMainIndex", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.11.1.1.11", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "PositiveIntegerIncludingZero", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "For complex alarm thresholds, this is the pointer into the alarmThresholdValueLookupTable. This object does not apply to simple thresholds and should be 0 in those cases."
  }, 
  "alarmThresholdValueLookupTable": {
    "name": "alarmThresholdValueLookupTable", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.11.2", 
    "nodetype": "table", 
    "class": "objecttype", 
    "maxaccess": "not-accessible", 
    "status": "current", 
    "description": "This table contains the threshold values of those alarms with ranges that are: 1. not linear or 2. cannot be described in by the few basic parameters in alarmThresholdTable. Alarm thresholds with these characteristics are referred to as complex thresholds and include NodeX VSWR ratios and external alarm polarity. Alarms whose thresholds fall into this class must still be set in a fairly simple manner and the allowed values must be clearly communicated to the network manager. Therefore an integer value must be mapped to an ASCII string describing the particular setting. This table must be presented such that alarmThresholdLookupValue objects are in ascending order based on their values."
  }, 
  "alarmThresholdValueLookupEntry": {
    "name": "alarmThresholdValueLookupEntry", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.11.2.1", 
    "nodetype": "row", 
    "class": "objecttype", 
    "maxaccess": "not-accessible", 
    "indices": [
      {
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB", 
        "object": "alarmThresholdLookupMainIdx", 
        "implied": 0
      }, 
      {
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB", 
        "object": "alarmThresholdLookupValueIdx", 
        "implied": 0
      }
    ], 
    "status": "current", 
    "description": "Alarm threshold value lookup table entry."
  }, 
  "alarmThresholdLookupMainIdx": {
    "name": "alarmThresholdLookupMainIdx", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.11.2.1.1", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "PositiveIntegerButNotZero", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Main table index referenced by alarmThresholdPointerToValueLookupTableMainIndex."
  }, 
  "alarmThresholdLookupValueIdx": {
    "name": "alarmThresholdLookupValueIdx", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.11.2.1.2", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "PositiveIntegerButNotZero", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "2nd table index. References the possible threshold values."
  }, 
  "alarmThresholdLookupValue": {
    "name": "alarmThresholdLookupValue", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.11.2.1.3", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "Integer32", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "This object indicates a value that may be used to set alarmThresholdActValue for the corresponding alarm. Instances of this object must be ordered such that their values are ascending."
  }, 
  "alarmThresholdLookupValueDescription": {
    "name": "alarmThresholdLookupValueDescription", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.11.2.1.4", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "This is the ascii string indicating the 'real' set value, including the units if applicable. For example if setting an external alarm polarity, this object may be 'active high'."
  }, 
  "alarmSummary": {
    "name": "alarmSummary", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.12", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "Severity", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "System summary alarm status. Can be used for a simple system summary alarm polling. This object gets also delivered with the heartbeatEvent notification."
  }, 
  "alarmConfig2Table": {
    "name": "alarmConfig2Table", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.13", 
    "nodetype": "table", 
    "class": "objecttype", 
    "maxaccess": "not-accessible", 
    "status": "current", 
    "description": "Agent alarm configuration table. This table lists all alarms supported by the agent. It is used to read resp. change default alarm parameter settings. This settings apply system-wide, even in distributed systems for every CTA."
  }, 
  "alarmConfig2Entry": {
    "name": "alarmConfig2Entry", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.13.1", 
    "nodetype": "row", 
    "class": "objecttype", 
    "maxaccess": "not-accessible", 
    "indices": [
      {
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB", 
        "object": "alarmConfig2CTAidx", 
        "implied": 0
      }, 
      {
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB", 
        "object": "alarmConfig2alarmIDidx", 
        "implied": 0
      }
    ], 
    "status": "current", 
    "description": "Alarm configuration table entry."
  }, 
  "alarmConfig2CTAidx": {
    "name": "alarmConfig2CTAidx", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.13.1.1", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "CTA", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Referenced Common Topology Address. It may also contain optional parameters, details see textual convention CTA."
  }, 
  "alarmConfig2alarmIDidx": {
    "name": "alarmConfig2alarmIDidx", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.13.1.2", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "Integer32", 
      "class": "type", 
      "constraints": {
        "range": [
          {
            "min": 1, 
            "max": 100000
          }
        ]
      }
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Referenced alarm ID: This is the most generic identifier of the alarm."
  }, 
  "alarmConfig2Severity": {
    "name": "alarmConfig2Severity", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.13.1.3", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "Severity", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "Reading this object indicates the current level the alarm is set at. Setting this object changes the current level accordingly. Note! Severity 5=cleared in this context indicates that the alarm is disabled/to be disabled. Setting this object to any other level than supported (indicated by alarmSeveritiesSupported4Set) is not valid and results in a return of wrongValue."
  }, 
  "alarmConfig2Latency": {
    "name": "alarmConfig2Latency", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.13.1.4", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "Gauge32", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "Alarm raise latency in seconds. Note: This object may not given for all alarms."
  }, 
  "alarmUsertext2Table": {
    "name": "alarmUsertext2Table", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.14", 
    "nodetype": "table", 
    "class": "objecttype", 
    "maxaccess": "not-accessible", 
    "status": "current", 
    "description": "Agent alarm user text configuration table. This table lists all alarms that support user defined text. It is used to read resp. change default alarm user text settings. This settings specific for every CTA within a distributed system."
  }, 
  "alarmUsertext2Entry": {
    "name": "alarmUsertext2Entry", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.14.1", 
    "nodetype": "row", 
    "class": "objecttype", 
    "maxaccess": "not-accessible", 
    "indices": [
      {
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB", 
        "object": "alarmUsertext2CTAidx", 
        "implied": 0
      }, 
      {
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB", 
        "object": "alarmUsertext2alarmIDidx", 
        "implied": 0
      }
    ], 
    "status": "current", 
    "description": "Alarm user text configuration table entry."
  }, 
  "alarmUsertext2CTAidx": {
    "name": "alarmUsertext2CTAidx", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.14.1.1", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "CTA", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Referenced Common Topology Address. It may also contain optional parameters, details see textual convention CTA."
  }, 
  "alarmUsertext2alarmIDidx": {
    "name": "alarmUsertext2alarmIDidx", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.14.1.2", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "Integer32", 
      "class": "type", 
      "constraints": {
        "range": [
          {
            "min": 1, 
            "max": 100000
          }
        ]
      }
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Referenced alarm ID: This is the most generic identifier of the alarm."
  }, 
  "alarmUsertext2": {
    "name": "alarmUsertext2", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.2.14.1.3", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type", 
      "constraints": {
        "size": [
          {
            "min": 0, 
            "max": 20
          }
        ]
      }
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "User defined text for referenced alarmID at referenced CTA."
  }, 
  "commonDeviceNotification": {
    "name": "commonDeviceNotification", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.3", 
    "class": "objectidentity", 
    "status": "current", 
    "description": "Notification objects."
  }, 
  "alarmTrap": {
    "name": "alarmTrap", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.3.1", 
    "class": "notificationtype", 
    "objects": [
      {
        "object": "sysName", 
        "module": "SNMPv2-MIB"
      }, 
      {
        "object": "alarmTrapCounter", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmID", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmSpecificProblem", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmPerceivedSeverity", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmEventDateTime", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmEventType", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmProbableCause", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmAdditionalText", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmEquipmentCTA", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmPhysicalIndex", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmEquipmentPointer", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgentUID", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "basicAgentLocationIdentification", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }
    ], 
    "status": "current", 
    "description": "Trap workflow: - this notification is sent any time an alarm raises or gets cleared - no acknowledge is required if sent as trap (not valid if sent as inform) - the alarm trap is sent once, without any repetitions if sent as trap (not valid if sent as inform) - the trap counter starts from 0 after reboot - each notification following notification increases the trap counter by 1 in order to provide an unique trap counter. - the trap counter wraps back to 1 after it reaches its maximum value (if this case should ever arise) in order to provide easy detect reboot capability V1.5.0.0 extension: - basicAgentLocationIdentification. For backward compatibility the manager has to use an empty string if this object is not provided with the notification."
  }, 
  "heartbeatEvent": {
    "name": "heartbeatEvent", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.3.2", 
    "class": "notificationtype", 
    "objects": [
      {
        "object": "sysName", 
        "module": "SNMPv2-MIB"
      }, 
      {
        "object": "alarmTrapCounter", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgentUID", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmSummary", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }
    ], 
    "status": "current", 
    "description": "A notification sent by the agent to indicate that the device and the connection are still active. The send interval is decided by means of alarmHeartbeatInterval. Heartbeat mechanism is an alternative to OMC daily polling."
  }, 
  "changedParameterEvent": {
    "name": "changedParameterEvent", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.3.3", 
    "class": "notificationtype", 
    "objects": [
      {
        "object": "sysName", 
        "module": "SNMPv2-MIB"
      }, 
      {
        "object": "alarmTrapCounter", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmChangedParameterPointer", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgentUID", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "basicAgentLocationIdentification", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "basicAgentLocationAlias", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "basicAgentOutOfOperationArea", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "basicAgentConditionChangedConfig", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgentUID2", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "basicCurrentTime", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }
    ], 
    "status": "current", 
    "description": "If manual user changes via other interfaces than SNMP, automatic changes based on geographic location change or any operating mode change happened, this notification is send to the OMC determined by the value of alarmRecipient (in case of manual user changes after logout). V1.5.0.0 extensions: This notification has also to be send if automatic configuration changes were made based on geographic location changes, or any other operating mode change happened. - basicAgentLocationIdentification contains the geographic location identification of the Agent. For backward compatibility the manager has to use an empty string if this object is not provided with the notification. - basicAgentLocationAlias contains the geographic location area (zone) name. For backward compatibility the manager has to use an empty string if this object is not provided with the notification. - basicAgentOutOfOperationArea indicates whether the Agent is out of operation (true) or not (false). For backward compatibility the manager has to use false if this object is not provided with the notification. Depending on this object the Manager has to suspend (basicAgentOutOfOperationArea==true) resp. resume (basicAgentOutOfOperationArea==false) the heartbeat supervision of the corresponding system (if activated). - basicAgentConditionChangedConfig indicates whether this notification was fired because of user maintenance (0) or other conditions (details see description of the object itself). For backward compatibility the manager has to use 0 if this object is not provided with the notification. - connAgentUID2. Enables the manager to detect system replacement at agent side (connAgentUID changed while connAgentUID2 keeps equal or vice versa). Added also to this notification because the system may have been replaced while it was out of operation so that the agentUpAndRunningEvent may not has been sent out. For backward compatibility the manager has to use an empty string if this object is not provided with the notification. V1.5.1.0 extension: - basicCurrentTime contains the date/timestamp when the event occurred."
  }, 
  "changedIPAddressEvent": {
    "name": "changedIPAddressEvent", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.3.4", 
    "class": "notificationtype", 
    "objects": [
      {
        "object": "sysName", 
        "module": "SNMPv2-MIB"
      }, 
      {
        "object": "alarmTrapCounter", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "basicAgentIPAddressNew", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgentUID", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAttachPSODrequesterSMS", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgntOrigIfNetworkType", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connVpnEnabled", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connVpnAgentIPIsVirtual", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgentUID2", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }
    ], 
    "status": "current", 
    "description": "Used to notify a new agent IP address to the manager determined by the value of alarmRecipient resp. connVpnManagerVirtualIP. This is NOT used if the agent is connected 'On Demand' to a circuit switched network. As the standard SNMP notification is 'fire and forget' and may get lost during distribution, this notification has to be send periodically with a suitable period (see also latest revision of specification Q0359R0 OAM Communication). Possible scenarios for sending this notification: LAN: IP address was changed during runtime by administrator or DHCP. CSAO: Initial connection to the network or reconnection after unexpected disconnect. PSAO: Initial connection to the packet data network access server or reconnection after unexpected disconnect. PSOD: Connection to the packet data network access server was invoked by an incoming SMS. In this case connAttachPSODrequesterSMS is set to the SMS sender number, in all other scenarios connAttachPSODrequesterSMS is set to an empty string. Note! This notification MUST NOT be sent: - if the IP address change was explicitely invoked by the manager with a SET on connAgentIPAddressLAN or connManOrigAgentIPAddressCS. - if the agent is connected 'On Demand' to a packet switched network and the connection to the network is initiated by the agent itself in order to send out any other notification (entConfigChange, alarmTrap, heartbeatEvent, changedParameterEvent, ...). - if the agent is connected 'On Demand' to a circuit switched network. V1.3.0.0 extensions: - connAgntOrigIfNetworkType identifies the network type for that the new IP address is valid. For backward compatibility the manager has to use PS if this object is not provided with the notification. - connVpnEnabled identifies whether VPN is enabled or not. For backward compatibility the manager has to use false if this object is not provided with the notification. - connVpnAgentIPIsVirtual identifies whether the reported IP address is a virtual VPN address or not. For backward compatibility the manager has to use false if this object is not provided with the notification. If VPN is enabled, additionally the virtual agent VPN IP address has to be reported as soon as the VPN tunnel is established. In that case the manager has to wait for the virtual VPN IP address before starting communication. V1.5.0.0 extension: - connAgentUID2. Enables the manager to detect system replacement at agent side (connAgentUID changed while connAgentUID2 keeps equal or vice versa). Added also to this notification because it may be fired before agentUpAndRunningEvent (see description alarmTrapCounter). For backward compatibility the manager has to use an empty string if this object is not provided with the notification."
  }, 
  "agentRebootRequiredEvent": {
    "name": "agentRebootRequiredEvent", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.3.5", 
    "class": "notificationtype", 
    "objects": [
      {
        "object": "sysName", 
        "module": "SNMPv2-MIB"
      }, 
      {
        "object": "alarmTrapCounter", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgentUID", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }
    ], 
    "status": "current", 
    "description": "This notification is sent if any configuration change by the manager requires an agent reboot."
  }, 
  "agentUpAndRunningEvent": {
    "name": "agentUpAndRunningEvent", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.3.6", 
    "class": "notificationtype", 
    "objects": [
      {
        "object": "sysName", 
        "module": "SNMPv2-MIB"
      }, 
      {
        "object": "alarmTrapCounter", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgentUID", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "basicAgentVersion", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "basicCurrentMibVersion", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "basicWirelessInnovationsMibVersion", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "basicAgentOutOfOperationArea", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgentUID2", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "swActivePackageVersion", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "swActivePackagePatchLevel", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }
    ], 
    "status": "current", 
    "description": "This notification is sent to indicate any agent startup. V1.5.0.0 extension: - basicAgentOutOfOperationArea indicates whether the Agent is out of its operational area (true) or not (false). For backward compatibility the manager has to use false if this object is not provided with the notification. - connAgentUID2. Enables the manager to detect system replacement at agent side (connAgentUID changed while connAgentUID2 keeps equal or vice versa). For backward compatibility the manager has to use an empty string if this object is not provided with the notification. - swActivePackageVersion. For backward compatibility the manager has to use an empty string if this object is not provided with the notification. - swActivePackagePatchLevel. For backward compatibility the manager has to use zero if this object is not provided with the notification. - On reception of this notification and if the Agent is not out of its operational area (basicAgentOutOfOperationArea==false), the Manager has to resume the heartbeat supervision of the corresponding system (if activated)."
  }, 
  "agentShutdownEvent": {
    "name": "agentShutdownEvent", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.3.7", 
    "class": "notificationtype", 
    "objects": [
      {
        "object": "sysName", 
        "module": "SNMPv2-MIB"
      }, 
      {
        "object": "alarmTrapCounter", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgentUID", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }
    ], 
    "status": "current", 
    "description": "This notification is sent by the Agent during shutdown to indicate that the system will be 'out of service'. On reception of this notification the Manager has to suspend the heartbeat supervision of the corresponding system (if activated)."
  }, 
  "changedLocationAreaEvent": {
    "name": "changedLocationAreaEvent", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.3.8", 
    "class": "notificationtype", 
    "objects": [
      {
        "object": "sysName", 
        "module": "SNMPv2-MIB"
      }, 
      {
        "object": "alarmTrapCounter", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgentUID", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgentUID2", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "basicCurrentTime", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "basicAgentLocationIdentification", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "basicAgentLocationAlias", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }
    ], 
    "status": "current", 
    "description": "This notification is sent by the Agent in case of a location (zone) change that caused no other parameter changes. In case of a location (zone) change that caused immediate or latency delayed parameter changes, the changedParameterEvent is used instead."
  }, 
  "commonDeviceConformance": {
    "name": "commonDeviceConformance", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.4", 
    "class": "objectidentity", 
    "status": "current", 
    "description": "Conformance objects."
  }, 
  "commonDeviceBasicGroup": {
    "oid": "1.3.6.1.4.1.331.1.2.1.1.4.1", 
    "name": "commonDeviceBasicGroup", 
    "class": "objectgroup", 
    "objects": [
      {
        "object": "basicAgentVersion", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "basicCurrentMibVersion", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "basicWirelessInnovationsMibVersion", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "basicCurrentTime", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "basicAgentIPAddressNew", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "basicAgentLocationIdentification", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "basicAgentLocationAlias", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "basicAgentOutOfOperationArea", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "basicAgentConditionChangedConfig", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }
    ], 
    "status": "current", 
    "description": "A collection of objects providing basic device status and control."
  }, 
  "commonDeviceAlarmGroup": {
    "oid": "1.3.6.1.4.1.331.1.2.1.1.4.2", 
    "name": "commonDeviceAlarmGroup", 
    "class": "objectgroup", 
    "objects": [
      {
        "object": "alarmRecipient", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmForwardingEnabled", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmHeartbeatInterval", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmSynchronize", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmTrapCounter", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmID", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmSpecificProblem", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmPerceivedSeverity", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmEventDateTime", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmEventType", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmProbableCause", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmAdditionalText", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmEquipmentCTA", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmPhysicalIndex", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmEquipmentPointer", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmChangedParameterPointer", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmSeveritiesSupported4Set", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmConfig2CTAidx", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmConfig2alarmIDidx", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmConfig2Severity", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmUsertext2CTAidx", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmUsertext2alarmIDidx", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmUsertext2", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmSummary", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }
    ], 
    "status": "current", 
    "description": "A collection of alarm information common to all devices."
  }, 
  "commonDeviceNotificationGroup": {
    "name": "commonDeviceNotificationGroup", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.4.3", 
    "class": "notificationgroup", 
    "objects": [
      {
        "object": "alarmTrap", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "heartbeatEvent", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "changedParameterEvent", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "changedIPAddressEvent", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "agentRebootRequiredEvent", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "agentUpAndRunningEvent", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }
    ], 
    "status": "current", 
    "description": "A collection of notifications common to all devices."
  }, 
  "commonDeviceCompliance": {
    "name": "commonDeviceCompliance", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.4.4", 
    "class": "objectidentity", 
    "status": "current", 
    "description": "Compliance objects."
  }, 
  "commonDeviceBasicCompliance": {
    "name": "commonDeviceBasicCompliance", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.4.4.1", 
    "class": "modulecompliance", 
    "modulecompliance": [
      {
        "object": "commonDeviceBasicGroup", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "commonDeviceAlarmGroup", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "commonDeviceNotificationGroup", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "commonDeviceConnectivityGroup", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "commonDeviceControlGroup", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }
    ], 
    "status": "current", 
    "description": "The compliance statement for all devices in this system."
  }, 
  "commonDeviceConnectivityGroup": {
    "oid": "1.3.6.1.4.1.331.1.2.1.1.4.5", 
    "name": "commonDeviceConnectivityGroup", 
    "class": "objectgroup", 
    "objects": [
      {
        "object": "connAgentUID", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgentIPAddressLAN", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgentMainConnectivity", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgentNotificationType", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgentUID2", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgentSmsWlIndex", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgentSmsWlNumber", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connManOrigAgentIPAddressCS", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connManOrigAuthUsernameCS", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connManOrigAuthPasswordCS", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connManOrigIdleTimeoutCS", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgntOrigIfIndex", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgntOrigIfEnabled", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgntOrigIfExtraSetting", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgntOrigIfPhoneNo", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgntOrigIfAuthUsername", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgntOrigIfAuthPassword", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgntOrigIfNetworkType", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgntOrigIfConnectionType", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgntOrigIdleTimeoutPSODreqBySMS", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAttachPSODrequesterSMS", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAttachPSODbySMSenabled", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgentSMSserviceCenter", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgentDisconnectTrigger", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgntOrigAlwaysOnInactivityTimer", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }
    ], 
    "status": "current", 
    "description": "A collection of objects providing for connectivity control."
  }, 
  "commonDeviceControlGroup": {
    "oid": "1.3.6.1.4.1.331.1.2.1.1.4.6", 
    "name": "commonDeviceControlGroup", 
    "class": "objectgroup", 
    "objects": [
      {
        "object": "ctrlApplication", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }
    ], 
    "status": "current", 
    "description": "A collection of device control objects."
  }, 
  "optionalNotificationsGroup": {
    "name": "optionalNotificationsGroup", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.4.97", 
    "class": "notificationgroup", 
    "objects": [
      {
        "object": "agentShutdownEvent", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "swActivationProgress", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "changedLocationAreaEvent", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "gpsEvent", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }
    ], 
    "status": "current", 
    "description": "A collection of optional notifications."
  }, 
  "optionalObjectsGroup": {
    "oid": "1.3.6.1.4.1.331.1.2.1.1.4.98", 
    "name": "optionalObjectsGroup", 
    "class": "objectgroup", 
    "objects": [
      {
        "object": "alarmThreshold4CTA", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmThreshold4alarmID", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmThresholdIdx", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmThresholdDescription", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmThresholdUnit", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmThresholdScale", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmThresholdStepValue", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmThresholdMinValueAllowed", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmThresholdMaxValueAllowed", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmThresholdActValue", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmThresholdPointerToValueLookupTableMainIndex", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmThresholdLookupMainIdx", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmThresholdLookupValueIdx", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmThresholdLookupValue", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmThresholdLookupValueDescription", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmConfig2Latency", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connVpnEnabled", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connVpnManagerVirtualIP", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connVpnAgentIPIsVirtual", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAndrewVpnEncryptionType", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAndrewVpnAuthUsername", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAndrewVpnAuthPassword", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAndrewVpnKeepAliveTime", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "featureKeyDescription", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "featureKeyEnabled", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "featureKeyNew", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "fulState", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "fulSegmentationSupported", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "fulFilename", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "fulMD5", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "fulUploadURL", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "fulResultOk", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "fulResultString", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "fulDestFolder", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "swActivePackageVersion", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "swActivePackagePatchLevel", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "swPackagesAvailable", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "swPackagesPatchlevel", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "swState", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "swPackageVersion", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "swPackagePatchLevel", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "swActivationForced", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "swStateResultOk", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "swStateResultString", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "swNeededFilesFilename", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "swNeededFilesFolder", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "swNeededFilesImmediateActivationRequired", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "swNeededFilesImmediateActivationSync", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "gpsHeartbeatInterval", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "gpsEventDestination", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "gpsEventDestinationIsAlarmRecipient", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "gpsEventEnabled", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "gpsEventTime", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "gpsEventType", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "gpsNoOfSatellites", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "gpsAltitude", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "gpsBearingDegree", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "gpsSpeed", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "gpsLongitude", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "gpsLatitude", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "gpsZoneName", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "gpsDataTimestamp", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connVpnAssignedServerGroupNo", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connVpnServerAssignState", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connVpnConnectionMode", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connVpnNotificationDestinationIsAlarmRecipient", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connVpnClientVirtualIP", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connOpenVpnProtocol", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgentInformRetries", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgentInformTimeout", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgentZoneChangeNotificationsEnabled", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connVpnDisconnectTrigger", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connVpnServerPhysicalIP", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connVpnAssignedServerType", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connVpnServerGroupIdx", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connVpnServerMainIP", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connVpnServerBackupIP", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "swFinalActivationNotification", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgentWebCommunicationProtocol", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }
    ], 
    "status": "current", 
    "description": "A collection of optional objects."
  }, 
  "obsoleteObjectsGroup": {
    "oid": "1.3.6.1.4.1.331.1.2.1.1.4.99", 
    "name": "obsoleteObjectsGroup", 
    "class": "objectgroup", 
    "objects": [
      {
        "object": "basicAgentIPAddress", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgentMainConnectivityType", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgntOrigIfConnectivityType", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmConfig4alarmID", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmConfigSeverity", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmUsertext4CTA", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmUsertext4alarmID", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "alarmUsertext", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }
    ], 
    "status": "obsolete", 
    "description": "This group contains all objects whose status has been changed to obsolete."
  }, 
  "commonDeviceConnectivity": {
    "name": "commonDeviceConnectivity", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5", 
    "class": "objectidentity", 
    "status": "current", 
    "description": "Connectivity objects."
  }, 
  "connAgentUID": {
    "name": "connAgentUID", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.1", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type", 
      "constraints": {
        "size": [
          {
            "min": 0, 
            "max": 40
          }
        ]
      }
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "This is the agent unique identifier. The manager uses this UID to distinguish the agents integrated in the managers database. It has to be included in every private/enterprise trap. Besides the sysName, which is for free customer use and gets displayed at any agent or manager GUI, this is the internal unique communication identifier between manager and agent at communication protocol level. This is a read only factory setting, it can be e.g. a MAC address, a Windows GUID or similar unique identifier. If this setting is not available at the agent, always an empty string has to be returned. For backward compatibility: If the manager receives an empty connAgentUID it has to use the sysName for system identification, as already implemented with mib versions prior to version 1.1.0.0"
  }, 
  "connAgentMainConnectivityType": {
    "name": "connAgentMainConnectivityType", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.2", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "ConnectivityType", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "obsolete", 
    "description": "Note! This object is obsolete and no longer supported. New objects are 'connAgentMainConnectivity' and corresponding 'connAgntOrigIfConnectionType'. Agent main connectivity type. This identifies resp. sets the preferred method and interface the agent connects to the network. It depends on the agent implementation whether all connectivity types are supported."
  }, 
  "connAgentIPAddressLAN": {
    "name": "connAgentIPAddressLAN", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.3", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "IPAddressAndPort", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "This is the IP address of the agent, if the agent is connected to a LAN network. The port number is that one the agent listens for SNMP GET/SET requests. It depends on the agent implementation whether a SET request is supported at all or maybe only setting the port gets rejected. Maybe setting the LAN IP address is only allowed to the LAN administrator outside the agent application (e.g. by DHCP or manually). Nevertheless a GET request has to reflect the actual setting, return 0.0.0.0:0 if LAN connection is not supported. Setting a new value should get active immediately (but this may depend on the operating system running at the agent)."
  }, 
  "connAgentMainConnectivity": {
    "name": "connAgentMainConnectivity", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.4", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "NetworkType", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "Agent main connectivity. This identifies resp. sets the preferred interface the agent connects to the network. It depends on the agent implementation whether all interfaces/network types are supported."
  }, 
  "connAgentNotificationType": {
    "name": "connAgentNotificationType", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.5", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "NotificationType", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "Notification type the agent uses for any event defined within commonDeviceNotification and any component specific event. See TC NotificationType."
  }, 
  "connAgentUID2": {
    "name": "connAgentUID2", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.6", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type", 
      "constraints": {
        "size": [
          {
            "min": 0, 
            "max": 40
          }
        ]
      }
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "This is an alternative unique identifier of the Agent. This UID can be used by the Manager to detect system replacement at Agent side (connAgentUID changed while connAgentUID2 keeps equal or vice versa). It is also included in the private/enterprise agentUpAndRunningEvent, changedParameterEvent and changedIPAddressEvent notification. This is a read only factory setting, it can be e.g. the IMSI identification of the Agent's wireless modem SIM card, a concatenation of the HW-ID and serial number out of the HW HID the Agent is running on or a similar unique identifier. If this ID is not available at the Agent, always an empty string has to be returned."
  }, 
  "connAgentWebCommunicationProtocol": {
    "name": "connAgentWebCommunicationProtocol", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.7", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "INTEGER", 
      "class": "type", 
      "constraints": {
        "enumeration": {
          "http": 1, 
          "httpAndHttps": 3, 
          "https": 2
        }
      }
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "This object indicates / controls which web communication protocol is active at the Agent. This setting applies to any HTTP based communication: Agent standard WEB interface and SNMP triggered file transfer (commonDeviceFileTransfer). 1 = HTTP 2 = HTTPS 3 = HTTP and HTTPS (in this case it is up to the Manager / web client to use HTTP or HTTPS) A change of this setting may require a restart of the WEB server at the Agent. In this case the WEB server restart is triggered by the Agent immediately with the successful SET request. If this object is not supported by the Agent, the Manager has to use HTTP."
  }, 
  "connAgentInformTimeout": {
    "name": "connAgentInformTimeout", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.8", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "INTEGER", 
      "class": "type", 
      "constraints": {
        "enumeration": {
          "m2": 120, 
          "m7": 420, 
          "m10": 600, 
          "s10": 10, 
          "s30": 30, 
          "m5": 300, 
          "m4": 240, 
          "s20": 20, 
          "m6": 360, 
          "m1": 60, 
          "m3": 180, 
          "s50": 50, 
          "s40": 40, 
          "m9": 540, 
          "m8": 480
        }
      }
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "This object shows/controls the timeout (in seconds) used by the Agent waiting for inform responses before resending. Valid values are: 10s, 20s, 30s, 40s, 50s, 1min, 2min, 3min, 4min, 5min, 6min, 7min, 8min, 9min, 10min."
  }, 
  "connAgentInformRetries": {
    "name": "connAgentInformRetries", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.9", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "Integer32", 
      "class": "type", 
      "constraints": {
        "range": [
          {
            "min": -1, 
            "max": -1
          }, 
          {
            "min": 1, 
            "max": 20
          }
        ]
      }
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "This object shows/controls the number of retries used by the Agent in case inform resending. Allowed range is 1 to 20 times or -1. The value of -1 indicates retries forever until the inform resonse gets received."
  }, 
  "connManagerOriginated": {
    "name": "connManagerOriginated", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.10", 
    "class": "objectidentity", 
    "status": "current", 
    "description": "Connectivity objects for connections initiated by the manager."
  }, 
  "connManOrigAgentIPAddressCS": {
    "name": "connManOrigAgentIPAddressCS", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.10.1", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "IPAddressAndPort", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "This is the IP address of the agent, if the agent gets accessed by an incoming circuit switched call (address of the agent dial-in server). The port number is that one the agent listens for SNMP GET/SET requests. It depends on the agent implementation whether a SET request is supported at all or maybe only setting the port gets rejected. Nevertheless a GET request has to reflect the actual setting, return 0.0.0.0:0 if circuit switched connection is not supported. Setting a new value should not affect the current connection, only future dial-in connections (but this may depend on the operating system running at the agent)."
  }, 
  "connManOrigAuthUsernameCS": {
    "name": "connManOrigAuthUsernameCS", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.10.2", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type", 
      "constraints": {
        "size": [
          {
            "min": 0, 
            "max": 20
          }
        ]
      }
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "This is the username for PPP authentication, if the agent gets accessed by an incoming circuit switched call. It depends on the agent implementation whether a SET request is supported. Setting a new value should not affect the current connection, only future dial-in connections (but this may depend on the operating system running at the agent)."
  }, 
  "connManOrigAuthPasswordCS": {
    "name": "connManOrigAuthPasswordCS", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.10.3", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type", 
      "constraints": {
        "size": [
          {
            "min": 0, 
            "max": 14
          }
        ]
      }
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "This is the password for PPP authentication, if the agent gets accessed by an incoming circuit switched call. For security reasons it is highly recommended that reading this object returns 14 asterisk character '**************'. Setting a new value should not affect the current connection, only future dial-in connections (but this may depend on the operating system running at the agent)."
  }, 
  "connManOrigIdleTimeoutCS": {
    "name": "connManOrigIdleTimeoutCS", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.10.4", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "INTEGER", 
      "class": "type", 
      "constraints": {
        "range": [
          {
            "min": 0, 
            "max": 60
          }
        ]
      }
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "Communication idle timeout in minutes for agent incoming circuit switched connections. When expires the agent should drop the incoming circuit switched connection. A value of 0 denotes an infinite time (incoming connection never dropped by the agent). The default value is 0."
  }, 
  "connAgentOriginated": {
    "name": "connAgentOriginated", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11", 
    "class": "objectidentity", 
    "status": "current", 
    "description": "Connectivity objects for connections initiated by the agent."
  }, 
  "connAgntOrigIfTable": {
    "name": "connAgntOrigIfTable", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.1", 
    "nodetype": "table", 
    "class": "objecttype", 
    "maxaccess": "not-accessible", 
    "status": "current", 
    "description": "Agent connectivity interface table. This table lists all possible interfaces that can be used for network connections at agent side."
  }, 
  "connAgntOrigIfEntry": {
    "name": "connAgntOrigIfEntry", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.1.1", 
    "nodetype": "row", 
    "class": "objecttype", 
    "maxaccess": "not-accessible", 
    "indices": [
      {
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB", 
        "object": "connAgntOrigIfIndex", 
        "implied": 0
      }
    ], 
    "status": "current", 
    "description": "Interface table entry. It depends on the agent implementation and connectivity type whether all the table entry objects are used at all resp. how it is interpreted. If an object is not applicable, a GET should return an empty value and a SET should return the notWritable error status."
  }, 
  "connAgntOrigIfIndex": {
    "name": "connAgntOrigIfIndex", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.1.1.1", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "PositiveIntegerButNotZero", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Table index. Also used to indicate the priority for interfaces of the same network type. Lower indexes indicate higher priority."
  }, 
  "connAgntOrigIfConnectivityType": {
    "name": "connAgntOrigIfConnectivityType", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.1.1.2", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "ConnectivityType", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "obsolete", 
    "description": "Note! This object is obsolete and no longer supported. New objects are 'connAgntOrigIfNetworkType' and 'connAgntOrigIfConnectionType'. Connectivity type of this interface."
  }, 
  "connAgntOrigIfEnabled": {
    "name": "connAgntOrigIfEnabled", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.1.1.3", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "INTEGER", 
      "class": "type", 
      "constraints": {
        "enumeration": {
          "disabled": 2, 
          "notApplicable": 0, 
          "enabled": 1
        }
      }
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "This object shows/controls whether this interface is enabled or disabled. It also shows whether or not such control is applicable. A GET may return: notApplicable(0) enabled(1) disabled(2) The value, notApplicable(0) is used to identify those interfaces that cannot be enabled or disabled by this object. Setting this object to notApplicable(0) is not valid and results in a return of wrongValue. Setting this object to enabled(1) enables this interface. Setting this object to disabled(2) disables this interface. In the case of an interface that does not support this control object, it is only legal to GET the value. A GET must always return notApplicable(0). Any SET must return notWritable."
  }, 
  "connAgntOrigIfExtraSetting": {
    "name": "connAgntOrigIfExtraSetting", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.1.1.4", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type", 
      "constraints": {
        "size": [
          {
            "min": 0, 
            "max": 80
          }
        ]
      }
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "Depending on network type, used for: - CS, PS: modem / network initialization string. - SMS: SMS prefix. - DC, LAN: not used."
  }, 
  "connAgntOrigIfPhoneNo": {
    "name": "connAgntOrigIfPhoneNo", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.1.1.5", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type", 
      "constraints": {
        "size": [
          {
            "min": 0, 
            "max": 31
          }
        ]
      }
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "Depending on network type, e.g. used for: - circuit switched dial-out PPP connections: Telephone number of the recipient for all notifications. - packet switched network connection: Access code for the packet data network access server. - SMS: destination SMS number."
  }, 
  "connAgntOrigIfAuthUsername": {
    "name": "connAgntOrigIfAuthUsername", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.1.1.6", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type", 
      "constraints": {
        "size": [
          {
            "min": 0, 
            "max": 40
          }
        ]
      }
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "Username. Depending on network type, e.g. used for: - circuit switched dial-out PPP connections: This string is used to authenticate the user's access to the OMC remote access server. - packet switched network connection: This string is used to authenticate the user's access to the packet data network access server."
  }, 
  "connAgntOrigIfAuthPassword": {
    "name": "connAgntOrigIfAuthPassword", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.1.1.7", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type", 
      "constraints": {
        "size": [
          {
            "min": 0, 
            "max": 14
          }
        ]
      }
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "Password, for security reasons it is highly recommended that reading this object returns 14 asterisk character '**************'. Depending on network type, e.g. used for: - circuit switched dial-out PPP connections: This string is used to authenticate the user's access to the OMC remote access server. - packet switched network connection: This string is used to authenticate the user's access to the packet data network access server."
  }, 
  "connAgntOrigIfNetworkType": {
    "name": "connAgntOrigIfNetworkType", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.1.1.8", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "NetworkType", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Network type of this interface. See TC NetworkType."
  }, 
  "connAgntOrigIfConnectionType": {
    "name": "connAgntOrigIfConnectionType", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.1.1.9", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "ConnectionType", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "Connection type of this interface. See TC ConnectionType. This object shows/controls the connection type of this interface. It also shows whether or not such control is applicable. A GET may return: notApplicable(0) onDemand(1) alwaysOn(2) The value notApplicable(0) is used to identify those interfaces that do not distinguish the connection type. Setting this object to notApplicable(0) is not valid and results in a return of wrongValue. In the case of an interface that does not support this control object, it is only legal to GET the value. A GET must always return notApplicable(0). Any SET must return notWritable."
  }, 
  "connAgntOrigIdleTimeoutPSODreqBySMS": {
    "name": "connAgntOrigIdleTimeoutPSODreqBySMS", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.2", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "INTEGER", 
      "class": "type", 
      "constraints": {
        "range": [
          {
            "min": 1, 
            "max": 60
          }
        ]
      }
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "Communication idle timeout in minutes for agent side 'On Demand' packet switched network connection. Note! This applies ONLY when the connect request was issued by SMS. When expires the agent should drop this connection. The default value is 5."
  }, 
  "connAttachPSODrequesterSMS": {
    "name": "connAttachPSODrequesterSMS", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.3", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type", 
      "constraints": {
        "size": [
          {
            "min": 0, 
            "max": 31
          }
        ]
      }
    }, 
    "maxaccess": "accessible-for-notify", 
    "status": "current", 
    "description": "This OID is used in the changedIPAddressEvent only. If the agent is connected PSOD and the connection to the packet data network access server was invoked by an incoming SMS, this object is set to the SMS sender number, in all other scenarios connAttachPSODrequesterSMS is set to an empty string."
  }, 
  "connAttachPSODbySMSenabled": {
    "name": "connAttachPSODbySMSenabled", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.4", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "TruthValue", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "Shows/sets whether SMS initiated packet switched network connection in the 'On demand' mode is enabled or disabled."
  }, 
  "connAgentSMSserviceCenter": {
    "name": "connAgentSMSserviceCenter", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.5", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type", 
      "constraints": {
        "size": [
          {
            "min": 0, 
            "max": 31
          }
        ]
      }
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "SMS service center number."
  }, 
  "connAgentDisconnectTrigger": {
    "name": "connAgentDisconnectTrigger", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.6", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "INTEGER", 
      "class": "type", 
      "constraints": {
        "enumeration": {
          "notApplicable": 0, 
          "disconnect": 1
        }
      }
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "With this object the manager is able to force a disconnect of an active agent originated network connection. A GET always returns notApplicable(0). A SET to notApplicable(0) has no affect and triggers no further agent activity. A SET to disconnect(1) will cause the agent to disconnect from the network and behave according the actual connectivity settings. Note: The response has to be sent before disconnecting from network. If disconnect is not applicable to the current connection network type (e.g. LAN, SMS), error inconsistentValue has to be returned."
  }, 
  "connAgentVpn": {
    "name": "connAgentVpn", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.7", 
    "class": "objectidentity", 
    "status": "current", 
    "description": "VPN communication objects. If the agent doesn't support VPN at all, always 'no such object' has to be returned to any request within this section."
  }, 
  "connVpnEnabled": {
    "name": "connVpnEnabled", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.7.1", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "TruthValue", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "This object shows/controls whether VPN communication is enabled or disabled."
  }, 
  "connVpnServerPhysicalIP": {
    "name": "connVpnServerPhysicalIP", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.7.2", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "IPAddressAndPort", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Physical IP address and port of actually connected VPN server. In case VPN is actually not connected, '0.0.0.0' will be responded."
  }, 
  "connVpnManagerVirtualIP": {
    "name": "connVpnManagerVirtualIP", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.7.3", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "IPAddressAndPort", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "Virtual VPN IP address and port of the recipient of all notifications in case VPN is enabled. Otherwise alarmRecipient (physical IP address) is used. Note! In case the Agent does not distinguish the notification destination for VPN and standard connection, this object reflects the setting of alarmRecipient and a SET request on this object will fail with an appropriate error."
  }, 
  "connVpnAgentIPIsVirtual": {
    "name": "connVpnAgentIPIsVirtual", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.7.4", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "TruthValue", 
      "class": "type"
    }, 
    "maxaccess": "accessible-for-notify", 
    "status": "current", 
    "description": "This OID is used in the changedIPAddressEvent only, see also description there. Indicates whether the reported IP address is a virtual VPN address or not."
  }, 
  "connAndrewVpn": {
    "name": "connAndrewVpn", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.7.5", 
    "class": "objectidentity", 
    "status": "current", 
    "description": "Andrew VPN objects."
  }, 
  "connAndrewVpnEncryptionType": {
    "name": "connAndrewVpnEncryptionType", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.7.5.1", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "INTEGER", 
      "class": "type", 
      "constraints": {
        "enumeration": {
          "cryptAES128": 1, 
          "cryptNone": 0, 
          "cryptBlowfish32": 3, 
          "cryptBlowfish64": 2
        }
      }
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "Encryption type for transferred data except keep alive packet."
  }, 
  "connAndrewVpnAuthUsername": {
    "name": "connAndrewVpnAuthUsername", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.7.5.2", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type", 
      "constraints": {
        "size": [
          {
            "min": 0, 
            "max": 31
          }
        ]
      }
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "VPN authentication user name. This string is used to authenticate the access to the VPN server."
  }, 
  "connAndrewVpnAuthPassword": {
    "name": "connAndrewVpnAuthPassword", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.7.5.3", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type", 
      "constraints": {
        "size": [
          {
            "min": 0, 
            "max": 31
          }
        ]
      }
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "VPN authentication password. This string is used to authenticate the access to the VPN server. For security reasons it is highly recommended that reading this object returns always asterisk characters '**************'."
  }, 
  "connAndrewVpnKeepAliveTime": {
    "name": "connAndrewVpnKeepAliveTime", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.7.5.4", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "Integer32", 
      "class": "type", 
      "constraints": {
        "range": [
          {
            "min": 30, 
            "max": 3600
          }
        ]
      }
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "Keep alive interval in seconds. Cyclic I am alive communication between VPN client and server."
  }, 
  "connOpenVpn": {
    "name": "connOpenVpn", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.7.6", 
    "class": "objectidentity", 
    "status": "current", 
    "description": "Open VPN objects."
  }, 
  "connOpenVpnProtocol": {
    "name": "connOpenVpnProtocol", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.7.6.1", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "INTEGER", 
      "class": "type", 
      "constraints": {
        "enumeration": {
          "udp": 1, 
          "tcp": 2
        }
      }
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "Protocol for communicating with OpenVPN server - UDP or TCP."
  }, 
  "connVpnClientVirtualIP": {
    "name": "connVpnClientVirtualIP", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.7.7", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "IPAddressAndPort", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Actual virtual IP address of the Agent (VPN client). In case VPN is currently not connected, 0.0.0.0 has to be responded."
  }, 
  "connVpnNotificationDestinationIsAlarmRecipient": {
    "name": "connVpnNotificationDestinationIsAlarmRecipient", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.7.8", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "TruthValue", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "Object that shows resp. controls in case of VPN connection whether the destination for all notifications is the standard notification destination (true: destination is alarmRecipient) or not (false: destination is connVpnManagerVirtualIP). Note! In case the Agent does not distinguish the notification destination for VPN and standard connection, a SET request on this object will fail with an appropriate error."
  }, 
  "connVpnConnectionMode": {
    "name": "connVpnConnectionMode", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.7.9", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "INTEGER", 
      "class": "type", 
      "constraints": {
        "enumeration": {
          "unknownOrNotApplicable": 1, 
          "vpnFailed": 2, 
          "vpnConnected": 3
        }
      }
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Object that shows whether the current VPN mode is secure (vpnConnected) or in unsecure fallback mode (vpnFailed). unknownOrNotApplicable is used in case VPN is disabled."
  }, 
  "connVpnServerGroups": {
    "name": "connVpnServerGroups", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.7.10", 
    "class": "objectidentity", 
    "status": "current", 
    "description": "Objects handling VPN server groups. Due to server scalability and failover aspects more than one server may be used. The server groups identify the different server instances."
  }, 
  "connVpnServerAssignState": {
    "name": "connVpnServerAssignState", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.7.10.1", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "INTEGER", 
      "class": "type", 
      "constraints": {
        "enumeration": {
          "assigned": 3, 
          "unknownOrNotApplicable": 1, 
          "unassigned": 2
        }
      }
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Object that shows whether the Agent/VPN client is assigned to a VPN server group. unknownOrNotApplicable is used in case VPN is disabled."
  }, 
  "connVpnAssignedServerGroupNo": {
    "name": "connVpnAssignedServerGroupNo", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.7.10.2", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "PositiveIntegerIncludingZero", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Object that shows the actual assigned VPN server group number (>0) or 0 in case VPN server is not assigned."
  }, 
  "connVpnAssignedServerType": {
    "name": "connVpnAssignedServerType", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.7.10.3", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "INTEGER", 
      "class": "type", 
      "constraints": {
        "enumeration": {
          "unknownOrNotApplicable": 1, 
          "main": 2, 
          "backup": 3
        }
      }
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Object that shows whether the Agent/VPN client is actually connected to resp. currently trying to connect the main or backup VPN server. unknownOrNotApplicable is used in case VPN is disabled."
  }, 
  "connVpnServerGroupTable": {
    "name": "connVpnServerGroupTable", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.7.10.10", 
    "nodetype": "table", 
    "class": "objecttype", 
    "maxaccess": "not-accessible", 
    "status": "current", 
    "description": "Table that holds VPN server groups. Due to scalability aspects more than one entry may be used. This table identifies the different server group instances of the different server types (main/backup). During client side server scan procedure the servers decide to accept a connection request from a particular client or not so the client can find its assigned server instance."
  }, 
  "connVpnServerGroupEntry": {
    "name": "connVpnServerGroupEntry", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.7.10.10.1", 
    "nodetype": "row", 
    "class": "objecttype", 
    "maxaccess": "not-accessible", 
    "indices": [
      {
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB", 
        "object": "connVpnServerGroupIdx", 
        "implied": 0
      }
    ], 
    "status": "current", 
    "description": "Description."
  }, 
  "connVpnServerGroupIdx": {
    "name": "connVpnServerGroupIdx", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.7.10.10.1.1", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "PositiveIntegerButNotZero", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Table index to identify the instance. Corresponds with VPN server group number."
  }, 
  "connVpnServerMainIP": {
    "name": "connVpnServerMainIP", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.7.10.10.1.2", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "IPAddressAndPort", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "Main VPN server physical IP address and port."
  }, 
  "connVpnServerBackupIP": {
    "name": "connVpnServerBackupIP", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.7.10.10.1.3", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "IPAddressAndPort", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "Backup VPN server physical IP address and port."
  }, 
  "connVpnDisconnectTrigger": {
    "name": "connVpnDisconnectTrigger", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.7.11", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "INTEGER", 
      "class": "type", 
      "constraints": {
        "enumeration": {
          "notApplicable": 0, 
          "disconnect": 1
        }
      }
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "With this object the manager is able to force an immediate VPN disconnect. A GET always returns notApplicable(0). A SET to notApplicable(0) has no affect and triggers no further agent activity. A SET to disconnect(1) will cause the agent to disconnect VPN and behave afterwards according the actual connectivity settings. Note: The response has to be sent before disconnecting VPN. If disconnect is not applicable (VPN not connected), error inconsistentValue has to be returned."
  }, 
  "connAgntOrigAlwaysOnInactivityTimer": {
    "name": "connAgntOrigAlwaysOnInactivityTimer", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.11.8", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "Integer32", 
      "class": "type", 
      "constraints": {
        "range": [
          {
            "min": 0, 
            "max": 0
          }, 
          {
            "min": 30, 
            "max": 1440
          }
        ]
      }
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "Communication idle timeout (related to application oriented incoming data requests) in minutes for agent outgoing always on connections. When expired the agent should drop and reconnect the outgoing always on connection. A value of 0 denotes an infinite time (outgoing always on connection never dropped by the agent, except main connectivity was changed and new connection type is no longer always on). The default value is 0. Allowed range is 30 to 1440 minutes (24 hours)."
  }, 
  "connAgentSmsWlTable": {
    "name": "connAgentSmsWlTable", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.12", 
    "nodetype": "table", 
    "class": "objecttype", 
    "maxaccess": "not-accessible", 
    "status": "current", 
    "description": "Agent SMS whitelist table. This table lists all accepted SMS numbers for incoming SMS requests."
  }, 
  "connAgentSmsWlEntry": {
    "name": "connAgentSmsWlEntry", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.12.1", 
    "nodetype": "row", 
    "class": "objecttype", 
    "maxaccess": "not-accessible", 
    "indices": [
      {
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB", 
        "object": "connAgentSmsWlIndex", 
        "implied": 0
      }
    ], 
    "status": "current", 
    "description": "Description."
  }, 
  "connAgentSmsWlIndex": {
    "name": "connAgentSmsWlIndex", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.12.1.1", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "PositiveIntegerButNotZero", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Table index to identify the instance."
  }, 
  "connAgentSmsWlNumber": {
    "name": "connAgentSmsWlNumber", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.12.1.2", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type", 
      "constraints": {
        "size": [
          {
            "min": 0, 
            "max": 31
          }
        ]
      }
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "Authorized SMS phone number for incoming SMS requests."
  }, 
  "connAgentZoneChangeNotificationsEnabled": {
    "name": "connAgentZoneChangeNotificationsEnabled", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.5.13", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "TruthValue", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "This object shows/controls whether all location area change based notifications are enabled or not. Location area change based notifications are: - changedParameterEvent[basicAgentConditionChangedConfig=locationChange] (->immediate RF configuration change) - changedParameterEvent[basicAgentConditionChangedConfig=locationLatency] (->RF configuration change after latency expired) - changedLocationAreaEvent (->no RF configuration change)"
  }, 
  "commonDeviceControl": {
    "name": "commonDeviceControl", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.6", 
    "class": "objectidentity", 
    "status": "current", 
    "description": "Device and agent application control objects. Objects in this group provide for resetting of remote devices. In the future, other control such as software download and disaster recovery will be provided."
  }, 
  "ctrlApplication": {
    "name": "ctrlApplication", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.6.1", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "INTEGER", 
      "class": "type", 
      "constraints": {
        "enumeration": {
          "running": 0, 
          "reboot": 1, 
          "restart": 2
        }
      }
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "This object allows the agent application to be reset and if needed, the operating system as well. A GET must return running(0). A SET to reboot(1) causes a complete reboot of the operating system and agent application. A SET to restart(2) causes an agent application restart. A SET to running(0) is not valid and results in a return of wrongValue. Note: before starting the reboot/restart the agent has to send back the SET response."
  }, 
  "commonDeviceFeatureKeys": {
    "name": "commonDeviceFeatureKeys", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.7", 
    "class": "objectidentity", 
    "status": "current", 
    "description": "With this section software features of the agent are handled. If the agent doesn't support software feature keys at all, always 'no such object' has to be returned to any request within this section."
  }, 
  "featureKeyTable": {
    "name": "featureKeyTable", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.7.1", 
    "nodetype": "table", 
    "class": "objecttype", 
    "maxaccess": "not-accessible", 
    "status": "current", 
    "description": "This table lists all possible SW features supported by the agent."
  }, 
  "featureKeyEntry": {
    "name": "featureKeyEntry", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.7.1.1", 
    "nodetype": "row", 
    "class": "objecttype", 
    "maxaccess": "not-accessible", 
    "indices": [
      {
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB", 
        "object": "featureKeyIdx", 
        "implied": 0
      }
    ], 
    "status": "current", 
    "description": "Description."
  }, 
  "featureKeyIdx": {
    "name": "featureKeyIdx", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.7.1.1.1", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "Integer32", 
      "class": "type", 
      "constraints": {
        "range": [
          {
            "min": 1, 
            "max": 32
          }
        ]
      }
    }, 
    "maxaccess": "not-accessible", 
    "status": "current", 
    "description": "Table index."
  }, 
  "featureKeyDescription": {
    "name": "featureKeyDescription", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.7.1.1.2", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Textual description of the feature."
  }, 
  "featureKeyEnabled": {
    "name": "featureKeyEnabled", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.7.1.1.3", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "TruthValue", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "This object shows whether the feature is enabled or not."
  }, 
  "featureKeyNew": {
    "name": "featureKeyNew", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.7.2", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type", 
      "constraints": {
        "size": [
          {
            "min": 0, 
            "max": 0
          }, 
          {
            "min": 42, 
            "max": 42
          }
        ]
      }
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "With this object a new SW feature can be enabled by writing a valid feature key. A GET always returns an empty string. A SET with an invalid feature key results in an error being returned."
  }, 
  "commonDeviceFileTransfer": {
    "name": "commonDeviceFileTransfer", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.8", 
    "class": "objectidentity", 
    "status": "current", 
    "description": "Objects for file transfer control. The actual file transfer is done via HTTP. In this section the following naming definition applies: - file upload: file transfer from Manager to Agent. - file download: file transfer from Agent to Manager."
  }, 
  "fUpload": {
    "name": "fUpload", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.8.1", 
    "class": "objectidentity", 
    "status": "current", 
    "description": "Objects for file upload control. The actual file transfer is done via HTTP POST. If the Agent doesn't support file upload at all, always 'no such object' has to be returned to any request within this section. General: - Any state transition not shown in the state diagram (except state transcision to idle - see idle description) is not allowed and should respond an SNMP error code. Before responding the error code, fulResultOk and fulResultString should be prepared accordingly. Preconditions for file upload are: - fulState = idle (default at Agent startup) - fulResultOk = false (default at Agent startup) - fulDestFolder (V1.5.0.0 extension), fulFilename, fulMD5, fulUploadURL and fulResultString are empty (defaults at Agent startup) Workflow file upload: - Manager sets fulState = preparation - Manager gets fulSegmentationSupported If segmentation is supported, the Manager performs all neccessary internal actions to prepare file segmentation. This step is optional. If more than one file should be uploaded, the Manager typically checks fulSegmentationSupported only once. - Manager sets fulDestFolder (V1.5.0.0 extension) This step is optional. If not set it is up to the Agent where to store the file. - Manager sets fulFilename Upon this, the Agent prepares the upload URL in fulUploadURL (before responding the set fulFilename request) - Manager gets fulUploadURL - Manager sets fulMD5 This step is optional. The Manager may want to upload a file without MD5 checksum test (e.g. MD5 checksum unknown). - Manager sets fulState = inProgress Manager performs the actual HTTP file transfer of the file <fulFilename> resp. all segments of the file <fulFilename.name>_n_of_m.<fulFilename.extension> using fulUploadURL together with the HTTP POST command. If fulFilename is part of fulUploadURL and file segmentation is used, the Manager has to insert the segment numbering (_n_of_m) into fulUploadURL accordingly. In case of segmented file upload the Agent shall autonomously reassemble the segments to the entire file after last segment was received. - Manager sets fulState = md5check Agent performs the MD5 check (optional, if fulMD5 is not empty), sets fulResultOk and fulResultString accordingly and finally Agent sets fulState = md5checkDone - Manager gets fulState in a loop until fulState = md5checkDone - Manager gets fulResultOk and fulResultString Manager gives corresponding user feedback. - Manager sets fulState = idle Upon this, the Agent resets fulResultOk to false and fulFilename, fulMD5, fulUploadURL and fulResultString to empty string."
  }, 
  "fulState": {
    "name": "fulState", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.8.1.1", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "INTEGER", 
      "class": "type", 
      "constraints": {
        "enumeration": {
          "preparation": 2, 
          "md5checkDone": 5, 
          "idle": 1, 
          "md5check": 4, 
          "inProgress": 3
        }
      }
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "File upload state. idle: State idle indicates that no file upload is active. Initial and final state. State transition back to idle is always initiated by the SNMP Manager and has to be possible out of any state (including idle). Upon this, the Agent resets fulResultOk to false and all the other objects to the default values listed in the file upload preconditions above. preparation: File upload preparation state, the SNMP Manager provides name and MD5 hash of the file to be uploaded. The SNMP Agent provides the upload URL. State transition to preparation is always initiated by the SNMP Manager. inProgress: State where the actual HTTP file upload takes place. State transition to inProgress is always initiated by the SNMP Manager. md5check: State after the actual HTTP file upload is finished, where the SNMP Agent verifies the upload result by a MD5 checksum test. State transition to md5check is always initiated by the SNMP Manager. md5checkDone: Upload verification is finished, SNMP Agent provides the result to the SNMP Manager (fulResultOk and fulResultString prepared accordingly by the SNMP Agent). State transition to md5checkDone is always initiated by the SNMP Agent."
  }, 
  "fulSegmentationSupported": {
    "name": "fulSegmentationSupported", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.8.1.2", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "TruthValue", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Indicates whether the Agent supports segmented file upload or not."
  }, 
  "fulFilename": {
    "name": "fulFilename", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.8.1.3", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "Name of file to upload. Set only allowed if fulState = preparation."
  }, 
  "fulMD5": {
    "name": "fulMD5", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.8.1.4", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type", 
      "constraints": {
        "size": [
          {
            "min": 0, 
            "max": 0
          }, 
          {
            "min": 32, 
            "max": 32
          }
        ]
      }
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "128 bit MD5 hash of file to upload represented as a sequence of 32 hexadecimal lowercase characters. Set only allowed if fulState = preparation."
  }, 
  "fulUploadURL": {
    "name": "fulUploadURL", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.8.1.5", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "URL for file upload to be used by the Manager together with the HTTP POST command."
  }, 
  "fulResultOk": {
    "name": "fulResultOk", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.8.1.6", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "TruthValue", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "File upload result, indicates whether file upload was successful or not. Value only valid if fulState = md5checkDone or any state transition responded an error code."
  }, 
  "fulResultString": {
    "name": "fulResultString", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.8.1.7", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Detailed description of file upload result. Syntax: 'E'(rror)|'W'(arning)|'I'(nfo)+': <Result text>' or empty string. Possible result strings (examples): - 'I: File upload successfully finished' - 'W: File upload successfully finished but MD5 checksum not tested' possible if fulMD5 is empty (optional step in workflow) when fulState = md5check - 'E: File <fulFilename> not found' - 'E: MD5 checksum error' Value only valid if fulState = md5checkDone or any state transition responded an error code."
  }, 
  "fulDestFolder": {
    "name": "fulDestFolder", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.8.1.8", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "V1.5.0.0 extension: Destination folder of file to upload. If the folder does not yet exist, the Agent has to create it during the SET request. Path separator character is the slash '/'. This may be an absolute (leading slash) or relative path (no leading slash) to the HTTP server file transfer root folder at Agent side. It has to be considered that there may be or may not be a trailing slash during GET or SET requests. Set only allowed if fulState = preparation."
  }, 
  "commonDeviceSwUpdateActivationRemoval": {
    "name": "commonDeviceSwUpdateActivationRemoval", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.9", 
    "class": "objectidentity", 
    "status": "current", 
    "description": "Objects to control Agent software update, activation or removal. If the Agent doesn't support software update/activation/removal at all, always 'no such object' has to be returned to any request within this section. General: - Any state transition not shown in the state diagram (except state transcision to idle - see idle description) is not allowed and should respond an SNMP error code. Before responding the error code, fulStateResultOk and fulStateResultString should be prepared accordingly. - swActivePackageVersion and swActivePackagePatchLevel show the version and patch level of the actual active SW package at the Agent. - swPackagesTable lists always all SW packages that are available at the Agent. Note: Depending on the Agent implementation swPackagesTable may list one (NodeA), two (NodeAM) or several (ION) available packages. Preconditions for SW update (all workflows) are: - swState = idle (default at Agent startup) - swStateResultOk and swActivationForced = false (default at Agent startup) - swPackageVersion, swStateResultString and swNeededFilesTable are empty (defaults at Agent startup) - swPackagePatchLevel = 0 (default at Agent startup) Workflow SW update - file transfer: - Manager sets swPackageVersion - Manager sets swPackagePatchLevel - Manager sets swState = versionReq Manager performs file upload of the SW package TOC file - Manager sets swState = prepareVersionRsp Agent analyzes the TOC file, updates swNeededFilesTable accordingly, sets swStateResultOk and swStateResultString accordingly and finally Agent sets swState = versionRsp - Manager gets swState in a loop until swState = versionRsp - Manager gets swStateResultOk and swStateResultString Manager gives corresponding user feedback. - Manager sets swState = fileTransfer Manager sends all necessary files to the Agent using File Upload (commonDeviceFileTransfer.fUpload) - If all files are uploaded, Manager sets swState = fileTransferDone Agent updates swPackagesTable with the actual transferred package swPackageVersion / swPackagePatchLevel before sending the SNMP SET response. - Manager can go on with package activation or cancel (back to idle) Workflow SW update - package activation: - Manager sets swPackageVersion - Manager sets swPackagePatchLevel - Manager sets swActivationForced accordingly (default should be 'false') - Manager sets swState = versionActivation Agent performs the neccessary actions to activate the SW package (package uncompression, database migration if not up to date, distribute SW to sub components,...), provides regular SW activation notifications (swActivationProgress, swState = versionActivation and progress info in swStateResultString), sets swStateResultOk and swStateResultString accordingly and finally Agent sets swState = versionActivationOrRemovalDone and sends final SW activation notification (swState = versionActivationOrRemovalDone) - Manager processes received SW activation notifications and gives corresponding user feedback - Manager waits for final SW activation notification and (optional, only with AlwaysOn connection) may get the swState in a loop until swState = versionActivationOrRemovalDone In case of timeout waiting for the final SW activation notification (which may get lost if not send as inform) the Manager finally gets swState, swStateResultOk and swStateResultString - Manager gives corresponding final user feedback. - Note: Depending on the Agent implementation package activation may force an Agent restart / reboot. Nevertheless the Agent should provide the final SW activation notification during startup. If the Agent is not able to do this (see also alarmTrapCounter description), the agentUpAndRunningEvent indicates the end of the package activation. If in this case within the agentUpAndRunningEvent the reported swActivePackageVersion is equal to the requested swPackageVersion and the reported swActivePackagePatchLevel is equal to the requested swPackagePatchLevel the package activation was successful, otherwise not. The Manager has to consider this issue. Workflow SW update - package removal: - Manager sets swPackageVersion - Manager sets swPackagePatchLevel - Manager sets swState = versionRemoval Agent performs the neccessary actions to remove the SW package, removes corresponding swPackageVersion / swPackagePatchLevel entry from swPackagesTable, sets swStateResultOk and swStateResultString accordingly and finally Agent sets swState = versionActivationOrRemovalDone - Manager gets swState in a loop until swState = versionActivationOrRemovalDone - Manager gets swStateResultOk and swStateResultString Manager gives corresponding user feedback. - Note: Depending on the Agent implementation package removal may not be supported. In this case the Agent should respond an appropriate error like during an invalid state transicion (see General above). Workflow cancel SW update: - Manager sets swState = idle Upon this, the Agent resets swStateResultOk to false and all the other objects to the default values listed in the SW update preconditions above. V1.5.3.0 workflow extensions - immediate file activation after upload: Manager detects swNeededFilesImmediateActivationRequired=true during fileTransfer after successful upload of a file. In this case: - Manager stops continuing fileTransfer of the remaining files by setting swState = fileTransferDone and continues with SW package activation immediately. - Manager waits for file activation synchronization notification identified by swNeededFilesImmediateActivationSync. - Agent performs corresponding file activation actions on SW package activation request and sends corresponding file activation synchronization notification when finished (reboot may take place). - Manager immediately starts SW update file transfer newly for the remaining files to upload. In this case the Agent might not request previously uploaded and already activated files again, otherwise there will be an endless upload/activation loop. If there are no remaining files to upload: - Manager verifies the overall SW package activation result. Note: Relevant for the overall SW package activation result is just the SW package version / result information sent with the file activation finished synchronization notification for the last file within swNeededFilesTable. For all other intermediate file activations the SW package version information may be not available or empty resp. the result may be false. In case the last file within swNeededFilesTable does not need immediate activation, swFinalActivationNotification is relevant for the overall SW package activation result. If the swFinalActivationNotification object is not available, the Manager has to assume the agentUpAndRunningEvent."
  }, 
  "swActivePackageVersion": {
    "name": "swActivePackageVersion", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.9.1", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "Version", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Version of the actual active SW package at the Agent. Typically this version is equal to basicAgentVersion but e.g. in distributed systems it may differ."
  }, 
  "swActivePackagePatchLevel": {
    "name": "swActivePackagePatchLevel", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.9.2", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "PositiveIntegerIncludingZero", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Patch level of the actual active SW package at the Agent."
  }, 
  "swPackagesTable": {
    "name": "swPackagesTable", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.9.3", 
    "nodetype": "table", 
    "class": "objecttype", 
    "maxaccess": "not-accessible", 
    "status": "current", 
    "description": "This table lists all SW packages that are available at the Agent."
  }, 
  "swPackagesEntry": {
    "name": "swPackagesEntry", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.9.3.1", 
    "nodetype": "row", 
    "class": "objecttype", 
    "maxaccess": "not-accessible", 
    "indices": [
      {
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB", 
        "object": "swPackagesIdx", 
        "implied": 0
      }
    ], 
    "status": "current", 
    "description": "Description."
  }, 
  "swPackagesIdx": {
    "name": "swPackagesIdx", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.9.3.1.1", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "PositiveIntegerButNotZero", 
      "class": "type"
    }, 
    "maxaccess": "not-accessible", 
    "status": "current", 
    "description": "Table index."
  }, 
  "swPackagesAvailable": {
    "name": "swPackagesAvailable", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.9.3.1.2", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "Version", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Version of available SW package."
  }, 
  "swPackagesPatchlevel": {
    "name": "swPackagesPatchlevel", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.9.3.1.3", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "PositiveIntegerIncludingZero", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Patch level of available SW package."
  }, 
  "swState": {
    "name": "swState", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.9.4", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "INTEGER", 
      "class": "type", 
      "constraints": {
        "enumeration": {
          "versionActivationOrRemovalDone": 8, 
          "versionRemoval": 9, 
          "versionActivation": 7, 
          "versionRsp": 4, 
          "idle": 1, 
          "fileTransferDone": 6, 
          "versionReq": 2, 
          "prepareVersionRsp": 3, 
          "fileTransfer": 5
        }
      }
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "SW update / activation / removal state. idle: State idle indicates that no SW update / activation / removal is active. Initial state. State transition back to idle is always initiated by the SNMP Manager and has to be possible out of any state (including idle). Upon this, the Agent resets swStateResultOk to false and all the other objects to the default values listed in the SW update preconditions above. versionReq: SW update version request state, the SNMP Manager provides details of new SW package (file upload of TOC file) to the SNMP Agent. State transition to versionReq is always initiated by the SNMP Manager. prepareVersionRsp: During prepareVersionRsp state the Agent analyzes the TOC file. The Agent prepares the information which files are needed to be uploaded for the new SW package and which SW packages are already available at the Agent. State transition to prepareVersionRsp is always initiated by the SNMP Manager. versionRsp: In state versionRsp the Agent provides the data prepared during prepareVersionRsp and the data is ready to be read by the Manager. State transition to versionRsp is always initiated by the SNMP Agent. fileTransfer: State where the actual HTTP file upload of all the needed files of the new SW package takes place. State transition to fileTransfer is always initiated by the SNMP Manager. fileTransferDone: File transter is finished, new SW package is available at the Agent and is ready for activation. State transition to fileTransterDone is always initiated by the SNMP Manager. versionActivation: During versionActivation the Agent performs all necessary activities to activate the new SW package version. If during version activation the Agent has to reboot, the state has to be preserved. State transition to versionActivation is always initiated by the SNMP Manager. versionActivationOrRemovalDone: SW package activation or removal is finished. Final state. State transition to versionActivationOrRemovalDone is always initiated by the SNMP Agent. versionRemoval: State to initiate the removal of a SW package. The SNMP Manager provides SW package version to the SNMP Agent. State transition to versionRemoval is always initiated by the SNMP Manager."
  }, 
  "swPackageVersion": {
    "name": "swPackageVersion", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.9.5", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "Version", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "Version of new SW package to be updated / activated / removed."
  }, 
  "swPackagePatchLevel": {
    "name": "swPackagePatchLevel", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.9.6", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "PositiveIntegerIncludingZero", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "Patch level of new SW package to be updated / activated / removed."
  }, 
  "swActivationForced": {
    "name": "swActivationForced", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.9.7", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "TruthValue", 
      "class": "type"
    }, 
    "maxaccess": "read-write", 
    "status": "current", 
    "description": "SW package activation 'force' option."
  }, 
  "swStateResultOk": {
    "name": "swStateResultOk", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.9.8", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "TruthValue", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Actual state result, indicates whether transition to actual state was successful or not. Value only valid if swState = versionRsp or versionActivationOrRemovalDone or any state transition responded an error code."
  }, 
  "swStateResultString": {
    "name": "swStateResultString", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.9.9", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Detailed description of actual state result. Syntax: 'E'(rror)|'W'(arning)|'I'(nfo)+': <Result text>' or empty string. Possible result strings (examples): - 'I: SW package <swPackageVersion> successfully uploaded' - 'I: SW package <swPackageVersion> successfully activated' - 'E: Timeout during file <swuNeededFilesFilename> upload' - 'E: SW package <swPackageVersion> activation error' - 'E: SW package <swPackageVersion> not available for activation' Value only valid if swState = versionRsp or versionActivationOrRemovalDone or any state transition responded an error code."
  }, 
  "swNeededFilesTable": {
    "name": "swNeededFilesTable", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.9.10", 
    "nodetype": "table", 
    "class": "objecttype", 
    "maxaccess": "not-accessible", 
    "status": "current", 
    "description": "This table lists all files of the new SW package that are not yet available at the Agent. V1.5.3.0 extension: - immediate file activation after upload introduced. - in case the Agent requires a specific file upload sequence during swState fileTransfer, this table has to be filled accordingly by the Agent and the Manager has to upload the files accordingly: Sequence order ascending according table index."
  }, 
  "swNeededFilesEntry": {
    "name": "swNeededFilesEntry", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.9.10.1", 
    "nodetype": "row", 
    "class": "objecttype", 
    "maxaccess": "not-accessible", 
    "indices": [
      {
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB", 
        "object": "swNeededFilesIdx", 
        "implied": 0
      }
    ], 
    "status": "current", 
    "description": "Description."
  }, 
  "swNeededFilesIdx": {
    "name": "swNeededFilesIdx", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.9.10.1.1", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "PositiveIntegerButNotZero", 
      "class": "type"
    }, 
    "maxaccess": "not-accessible", 
    "status": "current", 
    "description": "Table index."
  }, 
  "swNeededFilesFilename": {
    "name": "swNeededFilesFilename", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.9.10.1.2", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Name of a needed file which is part of the new SW package."
  }, 
  "swNeededFilesFolder": {
    "name": "swNeededFilesFolder", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.9.10.1.3", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "OCTET STRING", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "Corresponding folder for swNeededFilesFilename. Path separator character is the slash '/'. This is a relative path (no leading slash) within the new SW package. The Manager has to consider that there may be or may not be a trailing slash."
  }, 
  "swNeededFilesImmediateActivationRequired": {
    "name": "swNeededFilesImmediateActivationRequired", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.9.10.1.4", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "TruthValue", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "This object identifies whether the file needs immediate activation after upload or not. If this object is not available, the Manager has to assume false."
  }, 
  "swNeededFilesImmediateActivationSync": {
    "name": "swNeededFilesImmediateActivationSync", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.9.10.1.5", 
    "nodetype": "column", 
    "class": "objecttype", 
    "syntax": {
      "type": "OBJECT IDENTIFIER", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "In case swNeededFilesImmediateActivationRequired is true, this object identifies the file activation finished synchronization notification, sent out by the Agent when all steps of the file activation process are done (Agent reboot may be necessary). Possible values are null or object not available (in case swNeededFilesImmediateActivationRequired is false or not available) resp. either the agentUpAndRunningEvent or swActivationProgress (swState=versionActivationOrRemovalDone) notification, because just this two notifications contain corresponding SW package version information the Manager can use to verify the activation result. Note: Relevant for the overall SW package activation result is just the SW package version / result information sent with the file activation finished synchronization notification for the last file within swNeededFilesTable. For all other intermediate file activations the SW package version information may be not available or empty resp. the result may be false. In case the last file within swNeededFilesTable does not need immediate activation, swFinalActivationNotification is relevant for the overall SW package activation result."
  }, 
  "swFinalActivationNotification": {
    "name": "swFinalActivationNotification", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.9.11", 
    "nodetype": "scalar", 
    "class": "objecttype", 
    "syntax": {
      "type": "OBJECT IDENTIFIER", 
      "class": "type"
    }, 
    "maxaccess": "read-only", 
    "status": "current", 
    "description": "This object identifies the final SW package activation finished notification, sent out by the Agent at the end of a SW package activation when all steps of the activation process are done. Possible values are either the agentUpAndRunningEvent or swActivationProgress (swState=versionActivationOrRemovalDone) notification, because just this two notifications contain corresponding SW package version information the Manager can use to verify the activation result. If this object is not available, the Manager has to assume the agentUpAndRunningEvent."
  }, 
  "swActivationProgress": {
    "name": "swActivationProgress", 
    "oid": "1.3.6.1.4.1.331.1.2.1.1.9.20", 
    "class": "notificationtype", 
    "objects": [
      {
        "object": "sysName", 
        "module": "SNMPv2-MIB"
      }, 
      {
        "object": "alarmTrapCounter", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "connAgentUID", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "swState", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "swPackageVersion", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "swPackagePatchLevel", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "swStateResultOk", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }, 
      {
        "object": "swStateResultString", 
        "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
      }
    ], 
    "status": "current", 
    "description": "This notification is sent to provide SW package activation progress information to the Manager. Progress information strings during activation come with swState = versionActivation and final notification when activation is finished comes with swState = versionActivationOrRemovalDone. swStateResultOk and swStateResultString indicate the final result."
  }, 
  "groupNodeM": {
    "name": "groupNodeM", 
    "oid": "1.3.6.1.4.1.331.1.2.1.2", 
    "class": "objectidentity", 
    "status": "current", 
    "description": "Placeholder for all Node products."
  }, 
  "groupBCELL": {
    "name": "groupBCELL", 
    "oid": "1.3.6.1.4.1.331.1.2.1.3", 
    "class": "objectidentity", 
    "status": "current", 
    "description": "Placeholder for all Brite-Cell products."
  }, 
  "groupAMR": {
    "name": "groupAMR", 
    "oid": "1.3.6.1.4.1.331.1.2.1.4", 
    "class": "objectidentity", 
    "status": "current", 
    "description": "Placeholder for all AMR products."
  }, 
  "groupMiniRepeater": {
    "name": "groupMiniRepeater", 
    "oid": "1.3.6.1.4.1.331.1.2.1.5", 
    "class": "objectidentity", 
    "status": "current", 
    "description": "Placeholder for all miniRepeater products"
  }, 
  "groupION": {
    "name": "groupION", 
    "oid": "1.3.6.1.4.1.331.1.2.1.6", 
    "class": "objectidentity", 
    "status": "current", 
    "description": "Placeholder for all ION products."
  }, 
  "ionM": {
    "name": "ionM", 
    "oid": "1.3.6.1.4.1.331.1.2.1.6.1", 
    "class": "objectidentity", 
    "status": "current", 
    "description": "ION-M section."
  }, 
  "ionB": {
    "name": "ionB", 
    "oid": "1.3.6.1.4.1.331.1.2.1.6.2", 
    "class": "objectidentity", 
    "status": "current", 
    "description": "ION-B section."
  }, 
  "ionU": {
    "name": "ionU", 
    "oid": "1.3.6.1.4.1.331.1.2.1.6.3", 
    "class": "objectidentity", 
    "status": "current", 
    "description": "ION-U section."
  }, 
  "meta": {
    "comments": [
      "ASN.1 source file:///run/pymib/mibs/WIRELESS-INNOVATIONS-PRODUCTS-MIB.mib", 
      "Produced by pysmi-0.3.4 at Sat Apr 25 23:23:51 2020", 
      "On host linux01bestmonitoringtools platform Linux version 4.9.0-8-amd64 by user bestmonitoringtools.com", 
      "Using Python version 2.7.13 (default, Sep 26 2018, 18:42:22) "
    ], 
    "module": "WIRELESS-INNOVATIONS-PRODUCTS-MIB"
  }
}